export declare enum GroupMembershipType {
    INVITE_ONLY = "invite_only",
    MODERATED = "moderated"
}
export declare enum GroupEntityStatus {
    ACTIVE = "active",
    INACTIVE = "inactive",
    SUSPENDED = "suspended"
}
export declare enum GroupMemberRole {
    ADMIN = "admin",
    MEMBER = "member"
}
export interface GroupMember {
    name: string;
    groupId: string;
    userId: string;
    role: GroupMemberRole;
    status: GroupEntityStatus;
    createdOn?: string;
    createdBy?: string;
    updatedOn?: string;
    updatedBy?: string;
}
export interface GroupActivity {
    id: string;
    type: string;
    status?: GroupEntityStatus;
    activityInfo?: any;
    createdOn?: string;
    createdBy?: string;
    updatedOn?: string;
    updatedBy?: string;
}
export interface ActivitiesGrouped {
    title: string;
    translations?: string;
    count: number;
    isEnabled: boolean;
    objectType: string;
    items: GroupActivity[];
}
export interface Group {
    name: string;
    description: string;
    id: string;
    status?: GroupEntityStatus;
    membershipType: GroupMembershipType;
    createdOn?: string;
    createdBy?: string;
    updatedOn?: string;
    updatedBy?: string;
    activities?: GroupActivity[];
    activitiesGrouped?: ActivitiesGrouped[];
    members?: GroupMember[];
}
export declare class CsGroupActivity implements GroupActivity {
    id: string;
    type: string;
    status?: GroupEntityStatus;
    activityInfo?: any;
    createdOn?: string;
    createdBy?: string;
    updatedOn?: string;
    updatedBy?: string;
    static fromJSON(obj: {}): CsGroupActivity;
}
export declare class CsGroupMember implements GroupMember {
    name: string;
    groupId: string;
    userId: string;
    role: GroupMemberRole;
    status: GroupEntityStatus;
    createdOn?: string;
    createdBy?: string;
    updatedOn?: string;
    updatedBy?: string;
    static fromJSON(obj: {}): CsGroupMember;
}
export declare class CsGroup implements Group {
    name: string;
    description: string;
    id: string;
    status?: GroupEntityStatus;
    membershipType: GroupMembershipType;
    createdOn?: string;
    createdBy?: string;
    updatedOn?: string;
    updatedBy?: string;
    activitiesGrouped?: ActivitiesGrouped[];
    members?: CsGroupMember[];
    activities?: CsGroupActivity[];
    active: boolean;
    static fromJSON(obj: {}): CsGroup;
    isActive(): boolean;
}
