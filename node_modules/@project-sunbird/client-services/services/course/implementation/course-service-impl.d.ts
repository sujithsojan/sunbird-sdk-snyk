import { CertificateUrlResponse, ContentState, CsCourseService, GetContentStateRequest, GetUserEnrolledCoursesRequest, CsUpdateContentStateRequest, CsUpdateContentStateResponse } from '../interface';
import { Course } from '../../../models/course';
import { Observable } from 'rxjs';
import { CsCourseServiceConfig } from '../../../index';
import { CsHttpService } from '../../../core/http-service/interface';
export declare class CourseServiceImpl implements CsCourseService {
    private httpService;
    private apiPath;
    private certRegistrationApiPath?;
    constructor(httpService: CsHttpService, apiPath: string, certRegistrationApiPath?: string | undefined);
    getUserEnrolledCourses(request: GetUserEnrolledCoursesRequest, additionalParams?: {}, config?: CsCourseServiceConfig): Observable<Course[]>;
    getSignedCourseCertificate(certificateId: string, config?: CsCourseServiceConfig): Observable<CertificateUrlResponse>;
    getContentState(request: GetContentStateRequest, config?: CsCourseServiceConfig): Observable<ContentState[]>;
    updateContentState(request: CsUpdateContentStateRequest, config?: CsCourseServiceConfig): Observable<CsUpdateContentStateResponse>;
}
