import { IActor, ICDataEntry, IProducerdata, ITelemetryObject } from './cs-telemetry-request';
export declare abstract class TelemetryService {
    abstract initTelemetry(telemetryConfig: any): any;
    abstract raiseInteractTelemetry(interactObject: any): any;
    abstract raiseInteractTelemetryWith(cdata: Array<ICDataEntry>, env: string, edata: any, telemetryObject?: ITelemetryObject): any;
    abstract raiseImpressionTelemetry(interactObject: any): any;
    abstract raiseImpressionTelemetryWith(cdata: Array<ICDataEntry>, env: string, edata: any, telemetryObject?: ITelemetryObject): any;
    abstract raiseLogTelemetry(logObject: any): any;
    abstract raiseLogTelemetryWith(cdata: Array<ICDataEntry>, env: string, edata: any, telemetryObject?: ITelemetryObject): any;
    abstract raiseErrorTelemetry(errorObject: any): any;
    abstract raiseErrorTelemetryWith(cdata: Array<ICDataEntry>, env: string, edata: any, telemetryObject?: ITelemetryObject): any;
    abstract raiseAuditTelemetry(auditObject: any): any;
    abstract raiseAuditTelemetryWith(cdata: Array<ICDataEntry>, env: string, edata: any, telemetryObject?: ITelemetryObject): any;
    abstract raiseStartTelemetry(startEventObject: any): any;
    abstract raiseEndTelemetry(startEventObject: any): any;
    abstract raiseEndTelemetryWith(cdata: Array<ICDataEntry>, env: string, edata: any, telemetryObject?: ITelemetryObject): any;
    abstract raiseShareTelemetry(shareEventObject: any): any;
    abstract raiseShareTelemetryWith(cdata: Array<ICDataEntry>, env: string, edata: any, telemetryObject?: ITelemetryObject): any;
    abstract raiseFeedBackTelemetry(feedbackEventObject: any): any;
    abstract raiseFeedBackTelemetryWith(cdata: Array<ICDataEntry>, env: string, edata: any, telemetryObject?: ITelemetryObject): any;
    abstract setTelemetryAttributes(pdata: IProducerdata, actor: IActor, channel: string, sid: string, did: string): any;
    abstract raiseAssesTelemetry(data: any, options: any): any;
    abstract raiseResponseTelemetry(data: any, options: any): any;
    abstract raiseSummaryTelemetry(data: any, options: any): any;
    abstract raiseSearchTelemetry(interactObject: any): any;
    abstract raiseSearchTelemetryWith(cdata: Array<ICDataEntry>, env: string, edata: any, telemetryObject?: ITelemetryObject): any;
}
