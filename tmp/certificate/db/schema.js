import { DbConstants } from '../../db';
export var CertificatePublicKeyEntry;
(function (CertificatePublicKeyEntry) {
    CertificatePublicKeyEntry._ID = '_id';
    CertificatePublicKeyEntry.TABLE_NAME = 'certificate_public_key';
    CertificatePublicKeyEntry.COLUMN_NAME_IDENTIFIER = 'identifier';
    CertificatePublicKeyEntry.COLUMN_NAME_PUBLIC_KEY = 'public_key';
    CertificatePublicKeyEntry.COLUMN_NAME_ALGORITHM = 'alg';
    CertificatePublicKeyEntry.COLUMN_NAME_OWNER = 'owner';
    CertificatePublicKeyEntry.COLUMN_NAME_EXPIRY_TIME = 'expiry_time';
    CertificatePublicKeyEntry.getCreateEntry = function () {
        return 'CREATE TABLE IF NOT EXISTS ' + CertificatePublicKeyEntry.TABLE_NAME + ' (' +
            CertificatePublicKeyEntry._ID + ' INTEGER PRIMARY KEY,' +
            CertificatePublicKeyEntry.COLUMN_NAME_IDENTIFIER + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            CertificatePublicKeyEntry.COLUMN_NAME_PUBLIC_KEY + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            CertificatePublicKeyEntry.COLUMN_NAME_ALGORITHM + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            CertificatePublicKeyEntry.COLUMN_NAME_OWNER + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            CertificatePublicKeyEntry.COLUMN_NAME_EXPIRY_TIME + DbConstants.SPACE + DbConstants.INT_TYPE +
            ' )';
    };
    CertificatePublicKeyEntry.deleteTable = function () {
        return 'DROP TABLE IF EXISTS ' + CertificatePublicKeyEntry.TABLE_NAME;
    };
})(CertificatePublicKeyEntry || (CertificatePublicKeyEntry = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZW1hLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NlcnRpZmljYXRlL2RiL3NjaGVtYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBRXJDLE1BQU0sS0FBVyx5QkFBeUIsQ0FpQ3pDO0FBakNELFdBQWlCLHlCQUF5QjtJQUN6Qiw2QkFBRyxHQUFHLEtBQUssQ0FBQztJQUNaLG9DQUFVLEdBQUcsd0JBQXdCLENBQUM7SUFDdEMsZ0RBQXNCLEdBQUcsWUFBWSxDQUFDO0lBQ3RDLGdEQUFzQixHQUFHLFlBQVksQ0FBQztJQUN0QywrQ0FBcUIsR0FBRyxLQUFLLENBQUM7SUFDOUIsMkNBQWlCLEdBQUcsT0FBTyxDQUFDO0lBQzVCLGlEQUF1QixHQUFHLGFBQWEsQ0FBQztJQVd4Qyx3Q0FBYyxHQUFtQjtRQUMxQyxPQUFPLDZCQUE2QixHQUFHLDBCQUFBLFVBQVUsR0FBRyxJQUFJO1lBQ3BELDBCQUFBLEdBQUcsR0FBRyx1QkFBdUI7WUFDN0IsMEJBQUEsc0JBQXNCLEdBQUcsV0FBVyxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUMsU0FBUyxHQUFHLFdBQVcsQ0FBQyxTQUFTO1lBQzFGLDBCQUFBLHNCQUFzQixHQUFHLFdBQVcsQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDLFNBQVMsR0FBRyxXQUFXLENBQUMsU0FBUztZQUMxRiwwQkFBQSxxQkFBcUIsR0FBRyxXQUFXLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQyxTQUFTLEdBQUcsV0FBVyxDQUFDLFNBQVM7WUFDekYsMEJBQUEsaUJBQWlCLEdBQUcsV0FBVyxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUMsU0FBUyxHQUFHLFdBQVcsQ0FBQyxTQUFTO1lBQ3JGLDBCQUFBLHVCQUF1QixHQUFHLFdBQVcsQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDLFFBQVE7WUFDbEUsSUFBSSxDQUFDO0lBQ2IsQ0FBQyxDQUFDO0lBRVcscUNBQVcsR0FBbUI7UUFDdkMsT0FBTyx1QkFBdUIsR0FBRywwQkFBQSxVQUFVLENBQUM7SUFFaEQsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxFQWpDZ0IseUJBQXlCLEtBQXpCLHlCQUF5QixRQWlDekMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RiQ29uc3RhbnRzfSBmcm9tICcuLi8uLi9kYic7XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ2VydGlmaWNhdGVQdWJsaWNLZXlFbnRyeSB7XG4gICAgZXhwb3J0IGNvbnN0IF9JRCA9ICdfaWQnO1xuICAgIGV4cG9ydCBjb25zdCBUQUJMRV9OQU1FID0gJ2NlcnRpZmljYXRlX3B1YmxpY19rZXknO1xuICAgIGV4cG9ydCBjb25zdCBDT0xVTU5fTkFNRV9JREVOVElGSUVSID0gJ2lkZW50aWZpZXInO1xuICAgIGV4cG9ydCBjb25zdCBDT0xVTU5fTkFNRV9QVUJMSUNfS0VZID0gJ3B1YmxpY19rZXknO1xuICAgIGV4cG9ydCBjb25zdCBDT0xVTU5fTkFNRV9BTEdPUklUSE0gPSAnYWxnJztcbiAgICBleHBvcnQgY29uc3QgQ09MVU1OX05BTUVfT1dORVIgPSAnb3duZXInO1xuICAgIGV4cG9ydCBjb25zdCBDT0xVTU5fTkFNRV9FWFBJUllfVElNRSA9ICdleHBpcnlfdGltZSc7XG4gICAgXG4gICAgZXhwb3J0IGludGVyZmFjZSBTY2hlbWFNYXAge1xuICAgICAgICBbQ09MVU1OX05BTUVfSURFTlRJRklFUl06IHN0cmluZztcbiAgICAgICAgW0NPTFVNTl9OQU1FX0FMR09SSVRITV06IHN0cmluZztcbiAgICAgICAgW0NPTFVNTl9OQU1FX1BVQkxJQ19LRVldOiBzdHJpbmc7XG4gICAgICAgIFtDT0xVTU5fTkFNRV9PV05FUl06IHN0cmluZztcbiAgICAgICAgW0NPTFVNTl9OQU1FX0VYUElSWV9USU1FXTogbnVtYmVyO1xuICAgIFxuICAgIH1cblxuICAgIGV4cG9ydCBjb25zdCBnZXRDcmVhdGVFbnRyeTogKCgpID0+IHN0cmluZykgPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiAnQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgJyArIFRBQkxFX05BTUUgKyAnICgnICtcbiAgICAgICAgICAgIF9JRCArICcgSU5URUdFUiBQUklNQVJZIEtFWSwnICtcbiAgICAgICAgICAgIENPTFVNTl9OQU1FX0lERU5USUZJRVIgKyBEYkNvbnN0YW50cy5TUEFDRSArIERiQ29uc3RhbnRzLlRFWFRfVFlQRSArIERiQ29uc3RhbnRzLkNPTU1BX1NFUCArXG4gICAgICAgICAgICBDT0xVTU5fTkFNRV9QVUJMSUNfS0VZICsgRGJDb25zdGFudHMuU1BBQ0UgKyBEYkNvbnN0YW50cy5URVhUX1RZUEUgKyBEYkNvbnN0YW50cy5DT01NQV9TRVAgK1xuICAgICAgICAgICAgQ09MVU1OX05BTUVfQUxHT1JJVEhNICsgRGJDb25zdGFudHMuU1BBQ0UgKyBEYkNvbnN0YW50cy5URVhUX1RZUEUgKyBEYkNvbnN0YW50cy5DT01NQV9TRVAgK1xuICAgICAgICAgICAgQ09MVU1OX05BTUVfT1dORVIgKyBEYkNvbnN0YW50cy5TUEFDRSArIERiQ29uc3RhbnRzLlRFWFRfVFlQRSArIERiQ29uc3RhbnRzLkNPTU1BX1NFUCArXG4gICAgICAgICAgICBDT0xVTU5fTkFNRV9FWFBJUllfVElNRSArIERiQ29uc3RhbnRzLlNQQUNFICsgRGJDb25zdGFudHMuSU5UX1RZUEUgK1xuICAgICAgICAgICAgJyApJztcbiAgICB9O1xuXG4gICAgZXhwb3J0IGNvbnN0IGRlbGV0ZVRhYmxlOiAoKCkgPT4gc3RyaW5nKSA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuICdEUk9QIFRBQkxFIElGIEVYSVNUUyAnICsgVEFCTEVfTkFNRTtcblxuICAgIH07XG59XG4iXX0=