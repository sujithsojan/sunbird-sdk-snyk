import { ContentMarkerEntry } from '../db/schema';
import { ContentUtil } from '../util/content-util';
import { map } from 'rxjs/operators';
var ContentMarkerHandler = /** @class */ (function () {
    function ContentMarkerHandler(dbService) {
        this.dbService = dbService;
    }
    ContentMarkerHandler.prototype.getContentMarker = function (identifier, uid) {
        var _this = this;
        var query = "SELECT * FROM " + ContentMarkerEntry.TABLE_NAME + "\n                       " + ContentUtil.getUidnIdentifierFiler(uid, identifier) + "\n                       ORDER BY " + ContentMarkerEntry.COLUMN_NAME_EPOCH_TIMESTAMP + " DESC ";
        return this.dbService.execute(query).pipe(map(function (markersInDb) {
            return _this.mapDBEntriesToContentMarkerDetails(markersInDb);
        }));
    };
    ContentMarkerHandler.prototype.mapDBEntriesToContentMarkerDetails = function (markersInDb) {
        return markersInDb.map(function (markerInDb) {
            return {
                contentId: markerInDb[ContentMarkerEntry.COLUMN_NAME_CONTENT_IDENTIFIER],
                uid: markerInDb[ContentMarkerEntry.COLUMN_NAME_UID],
                extraInfoMap: markerInDb[ContentMarkerEntry.COLUMN_NAME_EXTRA_INFO] &&
                    JSON.parse(markerInDb[ContentMarkerEntry.COLUMN_NAME_EXTRA_INFO]),
                marker: markerInDb[ContentMarkerEntry.COLUMN_NAME_MARKER]
            };
        });
    };
    return ContentMarkerHandler;
}());
export { ContentMarkerHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1tYXJrZXItaGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb250ZW50L2hhbmRsZXJzL2NvbnRlbnQtbWFya2VyLWhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2hELE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFckM7SUFDSSw4QkFBb0IsU0FBb0I7UUFBcEIsY0FBUyxHQUFULFNBQVMsQ0FBVztJQUN4QyxDQUFDO0lBRU0sK0NBQWdCLEdBQXZCLFVBQXdCLFVBQWtCLEVBQUUsR0FBVztRQUF2RCxpQkFTQztRQVJHLElBQU0sS0FBSyxHQUFHLG1CQUFpQixrQkFBa0IsQ0FBQyxVQUFVLGlDQUMzQyxXQUFXLENBQUMsc0JBQXNCLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQywwQ0FDMUMsa0JBQWtCLENBQUMsMkJBQTJCLFdBQVEsQ0FBQztRQUNqRixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FDckMsR0FBRyxDQUFDLFVBQUMsV0FBMkM7WUFDNUMsT0FBQSxLQUFJLENBQUMsa0NBQWtDLENBQUMsV0FBVyxDQUFDO1FBQXBELENBQW9ELENBQ3ZELENBQ0osQ0FBQztJQUNOLENBQUM7SUFFTSxpRUFBa0MsR0FBekMsVUFBMEMsV0FBMkM7UUFDakYsT0FBTyxXQUFXLENBQUMsR0FBRyxDQUFDLFVBQUMsVUFBd0M7WUFDNUQsT0FBTztnQkFDSCxTQUFTLEVBQUUsVUFBVSxDQUFDLGtCQUFrQixDQUFDLDhCQUE4QixDQUFDO2dCQUN4RSxHQUFHLEVBQUUsVUFBVSxDQUFDLGtCQUFrQixDQUFDLGVBQWUsQ0FBQztnQkFDbkQsWUFBWSxFQUFFLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxzQkFBc0IsQ0FBQztvQkFDL0QsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsa0JBQWtCLENBQUMsc0JBQXNCLENBQUMsQ0FBQztnQkFDckUsTUFBTSxFQUFFLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxrQkFBa0IsQ0FBQzthQUM1RCxDQUFDO1FBQ04sQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0wsMkJBQUM7QUFBRCxDQUFDLEFBMUJELElBMEJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEYlNlcnZpY2V9IGZyb20gJy4uLy4uL2RiJztcbmltcG9ydCB7Q29udGVudE1hcmtlcn0gZnJvbSAnLi4nO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7Q29udGVudE1hcmtlckVudHJ5fSBmcm9tICcuLi9kYi9zY2hlbWEnO1xuaW1wb3J0IHtDb250ZW50VXRpbH0gZnJvbSAnLi4vdXRpbC9jb250ZW50LXV0aWwnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5leHBvcnQgY2xhc3MgQ29udGVudE1hcmtlckhhbmRsZXIge1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZGJTZXJ2aWNlOiBEYlNlcnZpY2UpIHtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0Q29udGVudE1hcmtlcihpZGVudGlmaWVyOiBzdHJpbmcsIHVpZDogc3RyaW5nKTogT2JzZXJ2YWJsZTxDb250ZW50TWFya2VyW10+IHtcbiAgICAgICAgY29uc3QgcXVlcnkgPSBgU0VMRUNUICogRlJPTSAke0NvbnRlbnRNYXJrZXJFbnRyeS5UQUJMRV9OQU1FfVxuICAgICAgICAgICAgICAgICAgICAgICAke0NvbnRlbnRVdGlsLmdldFVpZG5JZGVudGlmaWVyRmlsZXIodWlkLCBpZGVudGlmaWVyKX1cbiAgICAgICAgICAgICAgICAgICAgICAgT1JERVIgQlkgJHtDb250ZW50TWFya2VyRW50cnkuQ09MVU1OX05BTUVfRVBPQ0hfVElNRVNUQU1QfSBERVNDIGA7XG4gICAgICAgIHJldHVybiB0aGlzLmRiU2VydmljZS5leGVjdXRlKHF1ZXJ5KS5waXBlKFxuICAgICAgICAgICAgbWFwKChtYXJrZXJzSW5EYjogQ29udGVudE1hcmtlckVudHJ5LlNjaGVtYU1hcFtdKSA9PlxuICAgICAgICAgICAgICAgIHRoaXMubWFwREJFbnRyaWVzVG9Db250ZW50TWFya2VyRGV0YWlscyhtYXJrZXJzSW5EYilcbiAgICAgICAgICAgIClcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgbWFwREJFbnRyaWVzVG9Db250ZW50TWFya2VyRGV0YWlscyhtYXJrZXJzSW5EYjogQ29udGVudE1hcmtlckVudHJ5LlNjaGVtYU1hcFtdKTogQ29udGVudE1hcmtlcltdIHtcbiAgICAgICAgcmV0dXJuIG1hcmtlcnNJbkRiLm1hcCgobWFya2VySW5EYjogQ29udGVudE1hcmtlckVudHJ5LlNjaGVtYU1hcCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBjb250ZW50SWQ6IG1hcmtlckluRGJbQ29udGVudE1hcmtlckVudHJ5LkNPTFVNTl9OQU1FX0NPTlRFTlRfSURFTlRJRklFUl0sXG4gICAgICAgICAgICAgICAgdWlkOiBtYXJrZXJJbkRiW0NvbnRlbnRNYXJrZXJFbnRyeS5DT0xVTU5fTkFNRV9VSURdLFxuICAgICAgICAgICAgICAgIGV4dHJhSW5mb01hcDogbWFya2VySW5EYltDb250ZW50TWFya2VyRW50cnkuQ09MVU1OX05BTUVfRVhUUkFfSU5GT10gJiZcbiAgICAgICAgICAgICAgICAgICAgSlNPTi5wYXJzZShtYXJrZXJJbkRiW0NvbnRlbnRNYXJrZXJFbnRyeS5DT0xVTU5fTkFNRV9FWFRSQV9JTkZPXSksXG4gICAgICAgICAgICAgICAgbWFya2VyOiBtYXJrZXJJbkRiW0NvbnRlbnRNYXJrZXJFbnRyeS5DT0xVTU5fTkFNRV9NQVJLRVJdXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG59XG4iXX0=