import { InteractType, TelemetryInteractRequest } from '../../../telemetry';
import { Response } from '../../../api';
import { ContentUtil } from '../../util/content-util';
import { map } from 'rxjs/operators';
var GenerateInteractTelemetry = /** @class */ (function () {
    function GenerateInteractTelemetry(telemetryService) {
        this.telemetryService = telemetryService;
    }
    GenerateInteractTelemetry.prototype.execute = function (importContext, subType) {
        var identifier = importContext.items && importContext.items.length ?
            importContext.items[0]['identifier'] : '';
        var telemetryInteractRequest = new TelemetryInteractRequest();
        telemetryInteractRequest.type = InteractType.OTHER;
        telemetryInteractRequest.subType = subType;
        telemetryInteractRequest.pageId = 'ImportContent';
        telemetryInteractRequest.id = 'ImportContent';
        telemetryInteractRequest.env = 'sdk';
        telemetryInteractRequest.objId = identifier ? identifier : importContext.identifier,
            telemetryInteractRequest.objType = importContext.items && importContext.items.length ?
                ContentUtil.readPrimaryCategoryServer(importContext.items[0]) : '';
        telemetryInteractRequest.objVer = importContext.items && importContext.items.length ?
            ContentUtil.readPkgVersion(importContext.items[0]) + '' : '';
        telemetryInteractRequest.correlationData = importContext.correlationData;
        var response = new Response();
        response.body = importContext;
        return this.telemetryService.interact(telemetryInteractRequest).pipe(map(function () {
            return response;
        })).toPromise();
    };
    return GenerateInteractTelemetry;
}());
export { GenerateInteractTelemetry };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJhdGUtaW50ZXJhY3QtdGVsZW1ldHJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbnRlbnQvaGFuZGxlcnMvaW1wb3J0L2dlbmVyYXRlLWludGVyYWN0LXRlbGVtZXRyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsWUFBWSxFQUFFLHdCQUF3QixFQUFtQixNQUFNLG9CQUFvQixDQUFDO0FBRTVGLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFDdEMsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVyQztJQUVJLG1DQUFvQixnQkFBa0M7UUFBbEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtJQUN0RCxDQUFDO0lBRUQsMkNBQU8sR0FBUCxVQUFRLGFBQW1DLEVBQUUsT0FBTztRQUNoRCxJQUFNLFVBQVUsR0FBSSxhQUFhLENBQUMsS0FBSyxJQUFJLGFBQWEsQ0FBQyxLQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDcEUsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQzlDLElBQU0sd0JBQXdCLEdBQUcsSUFBSSx3QkFBd0IsRUFBRSxDQUFDO1FBQ2hFLHdCQUF3QixDQUFDLElBQUksR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDO1FBQ25ELHdCQUF3QixDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDM0Msd0JBQXdCLENBQUMsTUFBTSxHQUFHLGVBQWUsQ0FBQztRQUNsRCx3QkFBd0IsQ0FBQyxFQUFFLEdBQUcsZUFBZSxDQUFDO1FBQzlDLHdCQUF3QixDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUM7UUFDckMsd0JBQXdCLENBQUMsS0FBSyxHQUFJLFVBQVUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsVUFBVTtZQUNwRix3QkFBd0IsQ0FBQyxPQUFPLEdBQUcsYUFBYSxDQUFDLEtBQUssSUFBSSxhQUFhLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUNsRixXQUFXLENBQUMseUJBQXlCLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDdkUsd0JBQXdCLENBQUMsTUFBTSxHQUFHLGFBQWEsQ0FBQyxLQUFLLElBQUksYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNqRixXQUFXLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUNqRSx3QkFBd0IsQ0FBQyxlQUFlLEdBQUcsYUFBYSxDQUFDLGVBQWUsQ0FBQztRQUV6RSxJQUFNLFFBQVEsR0FBYSxJQUFJLFFBQVEsRUFBRSxDQUFDO1FBQzFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsYUFBYSxDQUFDO1FBQzlCLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLElBQUksQ0FDaEUsR0FBRyxDQUFDO1lBQ0EsT0FBTyxRQUFRLENBQUM7UUFDcEIsQ0FBQyxDQUFDLENBQ0wsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNsQixDQUFDO0lBRUwsZ0NBQUM7QUFBRCxDQUFDLEFBOUJELElBOEJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbnRlcmFjdFR5cGUsIFRlbGVtZXRyeUludGVyYWN0UmVxdWVzdCwgVGVsZW1ldHJ5U2VydmljZX0gZnJvbSAnLi4vLi4vLi4vdGVsZW1ldHJ5JztcbmltcG9ydCB7SW1wb3J0Q29udGVudENvbnRleHR9IGZyb20gJy4uLy4uJztcbmltcG9ydCB7UmVzcG9uc2V9IGZyb20gJy4uLy4uLy4uL2FwaSc7XG5pbXBvcnQge0NvbnRlbnRVdGlsfSBmcm9tICcuLi8uLi91dGlsL2NvbnRlbnQtdXRpbCc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmV4cG9ydCBjbGFzcyBHZW5lcmF0ZUludGVyYWN0VGVsZW1ldHJ5IHtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgdGVsZW1ldHJ5U2VydmljZTogVGVsZW1ldHJ5U2VydmljZSkge1xuICAgIH1cblxuICAgIGV4ZWN1dGUoaW1wb3J0Q29udGV4dDogSW1wb3J0Q29udGVudENvbnRleHQsIHN1YlR5cGUpOiBQcm9taXNlPFJlc3BvbnNlPiB7XG4gICAgICAgIGNvbnN0IGlkZW50aWZpZXIgPSAgaW1wb3J0Q29udGV4dC5pdGVtcyAmJiBpbXBvcnRDb250ZXh0Lml0ZW1zIS5sZW5ndGggP1xuICAgICAgICAgICAgaW1wb3J0Q29udGV4dC5pdGVtc1swXVsnaWRlbnRpZmllciddIDogJyc7XG4gICAgICAgIGNvbnN0IHRlbGVtZXRyeUludGVyYWN0UmVxdWVzdCA9IG5ldyBUZWxlbWV0cnlJbnRlcmFjdFJlcXVlc3QoKTtcbiAgICAgICAgdGVsZW1ldHJ5SW50ZXJhY3RSZXF1ZXN0LnR5cGUgPSBJbnRlcmFjdFR5cGUuT1RIRVI7XG4gICAgICAgIHRlbGVtZXRyeUludGVyYWN0UmVxdWVzdC5zdWJUeXBlID0gc3ViVHlwZTtcbiAgICAgICAgdGVsZW1ldHJ5SW50ZXJhY3RSZXF1ZXN0LnBhZ2VJZCA9ICdJbXBvcnRDb250ZW50JztcbiAgICAgICAgdGVsZW1ldHJ5SW50ZXJhY3RSZXF1ZXN0LmlkID0gJ0ltcG9ydENvbnRlbnQnO1xuICAgICAgICB0ZWxlbWV0cnlJbnRlcmFjdFJlcXVlc3QuZW52ID0gJ3Nkayc7XG4gICAgICAgIHRlbGVtZXRyeUludGVyYWN0UmVxdWVzdC5vYmpJZCA9ICBpZGVudGlmaWVyID8gaWRlbnRpZmllciA6IGltcG9ydENvbnRleHQuaWRlbnRpZmllcixcbiAgICAgICAgdGVsZW1ldHJ5SW50ZXJhY3RSZXF1ZXN0Lm9ialR5cGUgPSBpbXBvcnRDb250ZXh0Lml0ZW1zICYmIGltcG9ydENvbnRleHQuaXRlbXMubGVuZ3RoID9cbiAgICAgICAgICAgIENvbnRlbnRVdGlsLnJlYWRQcmltYXJ5Q2F0ZWdvcnlTZXJ2ZXIoaW1wb3J0Q29udGV4dC5pdGVtc1swXSkgOiAnJztcbiAgICAgICAgdGVsZW1ldHJ5SW50ZXJhY3RSZXF1ZXN0Lm9ialZlciA9IGltcG9ydENvbnRleHQuaXRlbXMgJiYgaW1wb3J0Q29udGV4dC5pdGVtcy5sZW5ndGggP1xuICAgICAgICAgICAgQ29udGVudFV0aWwucmVhZFBrZ1ZlcnNpb24oaW1wb3J0Q29udGV4dC5pdGVtc1swXSkgKyAnJyA6ICcnO1xuICAgICAgICB0ZWxlbWV0cnlJbnRlcmFjdFJlcXVlc3QuY29ycmVsYXRpb25EYXRhID0gaW1wb3J0Q29udGV4dC5jb3JyZWxhdGlvbkRhdGE7XG5cbiAgICAgICAgY29uc3QgcmVzcG9uc2U6IFJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKCk7XG4gICAgICAgIHJlc3BvbnNlLmJvZHkgPSBpbXBvcnRDb250ZXh0O1xuICAgICAgICByZXR1cm4gdGhpcy50ZWxlbWV0cnlTZXJ2aWNlLmludGVyYWN0KHRlbGVtZXRyeUludGVyYWN0UmVxdWVzdCkucGlwZShcbiAgICAgICAgICAgIG1hcCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgKS50b1Byb21pc2UoKTtcbiAgICB9XG5cbn1cbiJdfQ==