var CourseUtil = /** @class */ (function () {
    function CourseUtil() {
    }
    CourseUtil.getUpdateContentStateRequest = function (updateContentReq) {
        var contentStateList = [];
        contentStateList.push(this.getRequestMap(updateContentReq));
        return { userId: updateContentReq.userId, contents: contentStateList };
    };
    CourseUtil.getUpdateContentStateListRequest = function (userId, updateContentReqList) {
        var _this = this;
        var contentStateList = [];
        updateContentReqList.forEach(function (updateContentReq) {
            contentStateList.push(_this.getRequestMap(updateContentReq));
        });
        return { userId: userId, contents: contentStateList };
    };
    CourseUtil.getRequestMap = function (updateContentReq) {
        var contentState = {
            userId: updateContentReq.userId,
            contentId: updateContentReq.contentId,
            courseId: updateContentReq.courseId,
            batchId: updateContentReq.batchId,
            status: updateContentReq.status,
            progress: updateContentReq.progress,
        };
        if (updateContentReq.result) {
            contentState.result = updateContentReq.result;
        }
        if (updateContentReq.grade) {
            contentState.grade = updateContentReq.grade;
        }
        if (updateContentReq.score) {
            contentState.score = updateContentReq.score;
        }
        return contentState;
    };
    return CourseUtil;
}());
export { CourseUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291cnNlLXV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY291cnNlL2NvdXJzZS11dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0lBQUE7SUEwQ0EsQ0FBQztJQXpDaUIsdUNBQTRCLEdBQTFDLFVBQTJDLGdCQUEyQztRQUVsRixJQUFNLGdCQUFnQixHQUFtQixFQUFFLENBQUM7UUFDNUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1FBQzVELE9BQU8sRUFBQyxNQUFNLEVBQUUsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBQyxDQUFDO0lBQ3pFLENBQUM7SUFFYSwyQ0FBZ0MsR0FBOUMsVUFBK0MsTUFBYyxFQUFFLG9CQUFpRDtRQUFoSCxpQkFPQztRQUxHLElBQU0sZ0JBQWdCLEdBQW1CLEVBQUUsQ0FBQztRQUM1QyxvQkFBb0IsQ0FBQyxPQUFPLENBQUMsVUFBQyxnQkFBMkM7WUFDckUsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUksQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxFQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixFQUFDLENBQUM7SUFDeEQsQ0FBQztJQUdjLHdCQUFhLEdBQTVCLFVBQTZCLGdCQUEyQztRQUNwRSxJQUFNLFlBQVksR0FBMEI7WUFDeEMsTUFBTSxFQUFFLGdCQUFnQixDQUFDLE1BQU07WUFDL0IsU0FBUyxFQUFFLGdCQUFnQixDQUFDLFNBQVM7WUFDckMsUUFBUSxFQUFFLGdCQUFnQixDQUFDLFFBQVE7WUFDbkMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLE9BQU87WUFDakMsTUFBTSxFQUFFLGdCQUFnQixDQUFDLE1BQU07WUFDL0IsUUFBUSxFQUFFLGdCQUFnQixDQUFDLFFBQVE7U0FDdEMsQ0FBQztRQUVGLElBQUksZ0JBQWdCLENBQUMsTUFBTSxFQUFFO1lBQ3pCLFlBQVksQ0FBQyxNQUFNLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxDQUFDO1NBQ2pEO1FBRUQsSUFBSSxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUU7WUFDeEIsWUFBWSxDQUFDLEtBQUssR0FBRyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUM7U0FDL0M7UUFFRCxJQUFJLGdCQUFnQixDQUFDLEtBQUssRUFBRTtZQUN4QixZQUFZLENBQUMsS0FBSyxHQUFHLGdCQUFnQixDQUFDLEtBQUssQ0FBQztTQUMvQztRQUNELE9BQU8sWUFBNEIsQ0FBQztJQUN4QyxDQUFDO0lBRUwsaUJBQUM7QUFBRCxDQUFDLEFBMUNELElBMENDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb250ZW50U3RhdGUsIFVwZGF0ZUNvbnRlbnRTdGF0ZUFQSVJlcXVlc3QsIFVwZGF0ZUNvbnRlbnRTdGF0ZVJlcXVlc3R9IGZyb20gJy4vZGVmL3JlcXVlc3QtdHlwZXMnO1xuXG5leHBvcnQgY2xhc3MgQ291cnNlVXRpbCB7XG4gICAgcHVibGljIHN0YXRpYyBnZXRVcGRhdGVDb250ZW50U3RhdGVSZXF1ZXN0KHVwZGF0ZUNvbnRlbnRSZXE6IFVwZGF0ZUNvbnRlbnRTdGF0ZVJlcXVlc3QpXG4gICAgICAgIDogVXBkYXRlQ29udGVudFN0YXRlQVBJUmVxdWVzdCB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnRTdGF0ZUxpc3Q6IENvbnRlbnRTdGF0ZVtdID0gW107XG4gICAgICAgIGNvbnRlbnRTdGF0ZUxpc3QucHVzaCh0aGlzLmdldFJlcXVlc3RNYXAodXBkYXRlQ29udGVudFJlcSkpO1xuICAgICAgICByZXR1cm4ge3VzZXJJZDogdXBkYXRlQ29udGVudFJlcS51c2VySWQsIGNvbnRlbnRzOiBjb250ZW50U3RhdGVMaXN0fTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldFVwZGF0ZUNvbnRlbnRTdGF0ZUxpc3RSZXF1ZXN0KHVzZXJJZDogc3RyaW5nLCB1cGRhdGVDb250ZW50UmVxTGlzdDogVXBkYXRlQ29udGVudFN0YXRlUmVxdWVzdFtdKVxuICAgICAgICA6IFVwZGF0ZUNvbnRlbnRTdGF0ZUFQSVJlcXVlc3Qge1xuICAgICAgICBjb25zdCBjb250ZW50U3RhdGVMaXN0OiBDb250ZW50U3RhdGVbXSA9IFtdO1xuICAgICAgICB1cGRhdGVDb250ZW50UmVxTGlzdC5mb3JFYWNoKCh1cGRhdGVDb250ZW50UmVxOiBVcGRhdGVDb250ZW50U3RhdGVSZXF1ZXN0KSA9PiB7XG4gICAgICAgICAgICBjb250ZW50U3RhdGVMaXN0LnB1c2godGhpcy5nZXRSZXF1ZXN0TWFwKHVwZGF0ZUNvbnRlbnRSZXEpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB7dXNlcklkOiB1c2VySWQsIGNvbnRlbnRzOiBjb250ZW50U3RhdGVMaXN0fTtcbiAgICB9XG5cblxuICAgIHByaXZhdGUgc3RhdGljIGdldFJlcXVlc3RNYXAodXBkYXRlQ29udGVudFJlcTogVXBkYXRlQ29udGVudFN0YXRlUmVxdWVzdCk6IENvbnRlbnRTdGF0ZSB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnRTdGF0ZTogUGFydGlhbDxDb250ZW50U3RhdGU+ID0ge1xuICAgICAgICAgICAgdXNlcklkOiB1cGRhdGVDb250ZW50UmVxLnVzZXJJZCxcbiAgICAgICAgICAgIGNvbnRlbnRJZDogdXBkYXRlQ29udGVudFJlcS5jb250ZW50SWQsXG4gICAgICAgICAgICBjb3Vyc2VJZDogdXBkYXRlQ29udGVudFJlcS5jb3Vyc2VJZCxcbiAgICAgICAgICAgIGJhdGNoSWQ6IHVwZGF0ZUNvbnRlbnRSZXEuYmF0Y2hJZCxcbiAgICAgICAgICAgIHN0YXR1czogdXBkYXRlQ29udGVudFJlcS5zdGF0dXMsXG4gICAgICAgICAgICBwcm9ncmVzczogdXBkYXRlQ29udGVudFJlcS5wcm9ncmVzcyxcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAodXBkYXRlQ29udGVudFJlcS5yZXN1bHQpIHtcbiAgICAgICAgICAgIGNvbnRlbnRTdGF0ZS5yZXN1bHQgPSB1cGRhdGVDb250ZW50UmVxLnJlc3VsdDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh1cGRhdGVDb250ZW50UmVxLmdyYWRlKSB7XG4gICAgICAgICAgICBjb250ZW50U3RhdGUuZ3JhZGUgPSB1cGRhdGVDb250ZW50UmVxLmdyYWRlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHVwZGF0ZUNvbnRlbnRSZXEuc2NvcmUpIHtcbiAgICAgICAgICAgIGNvbnRlbnRTdGF0ZS5zY29yZSA9IHVwZGF0ZUNvbnRlbnRSZXEuc2NvcmU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNvbnRlbnRTdGF0ZSBhcyBDb250ZW50U3RhdGU7XG4gICAgfVxuXG59XG4iXX0=