import { HttpRequestType, Request } from '../../api';
import { map } from 'rxjs/operators';
var GetBatchDetailsHandler = /** @class */ (function () {
    function GetBatchDetailsHandler(apiService, courseServiceConfig) {
        this.apiService = apiService;
        this.courseServiceConfig = courseServiceConfig;
        this.GET_BATCH_DETAILS_ENDPOINT = '/batch/read/';
    }
    GetBatchDetailsHandler.prototype.handle = function (request) {
        var apiRequest = new Request.Builder()
            .withType(HttpRequestType.GET)
            .withPath(this.courseServiceConfig.apiPath + this.GET_BATCH_DETAILS_ENDPOINT + request.batchId)
            .withBearerToken(true)
            .withUserToken(true)
            .build();
        return this.apiService.fetch(apiRequest)
            .pipe(map(function (response) {
            return response.body.result.response;
        }));
    };
    return GetBatchDetailsHandler;
}());
export { GetBatchDetailsHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWJhdGNoLWRldGFpbHMtaGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb3Vyc2UvaGFuZGxlcnMvZ2V0LWJhdGNoLWRldGFpbHMtaGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWdDLGVBQWUsRUFBRSxPQUFPLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFHbEYsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRW5DO0lBSUksZ0NBQW9CLFVBQXNCLEVBQ3RCLG1CQUF3QztRQUR4QyxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3RCLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFKNUMsK0JBQTBCLEdBQUcsY0FBYyxDQUFDO0lBSzVELENBQUM7SUFFTSx1Q0FBTSxHQUFiLFVBQWMsT0FBa0M7UUFDNUMsSUFBTSxVQUFVLEdBQVksSUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFO2FBQzVDLFFBQVEsQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDO2FBQzdCLFFBQVEsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQywwQkFBMEIsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDO2FBQzlGLGVBQWUsQ0FBQyxJQUFJLENBQUM7YUFDckIsYUFBYSxDQUFDLElBQUksQ0FBQzthQUNuQixLQUFLLEVBQUUsQ0FBQztRQUViLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQWtDLFVBQVUsQ0FBQzthQUNwRSxJQUFJLENBQ0QsR0FBRyxDQUFDLFVBQUMsUUFBUTtZQUNULE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ3pDLENBQUMsQ0FBQyxDQUNMLENBQUM7SUFDVixDQUFDO0lBQ0wsNkJBQUM7QUFBRCxDQUFDLEFBdkJELElBdUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcGlSZXF1ZXN0SGFuZGxlciwgQXBpU2VydmljZSwgSHR0cFJlcXVlc3RUeXBlLCBSZXF1ZXN0fSBmcm9tICcuLi8uLi9hcGknO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7QmF0Y2gsIENvdXJzZUJhdGNoRGV0YWlsc1JlcXVlc3QsIENvdXJzZVNlcnZpY2VDb25maWd9IGZyb20gJy4uJztcbmltcG9ydCB7bWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmV4cG9ydCBjbGFzcyBHZXRCYXRjaERldGFpbHNIYW5kbGVyIGltcGxlbWVudHMgQXBpUmVxdWVzdEhhbmRsZXI8Q291cnNlQmF0Y2hEZXRhaWxzUmVxdWVzdCwgQmF0Y2g+IHtcbiAgICBwdWJsaWMgcmVhZG9ubHkgR0VUX0JBVENIX0RFVEFJTFNfRU5EUE9JTlQgPSAnL2JhdGNoL3JlYWQvJztcblxuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBhcGlTZXJ2aWNlOiBBcGlTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIHByaXZhdGUgY291cnNlU2VydmljZUNvbmZpZzogQ291cnNlU2VydmljZUNvbmZpZykge1xuICAgIH1cblxuICAgIHB1YmxpYyBoYW5kbGUocmVxdWVzdDogQ291cnNlQmF0Y2hEZXRhaWxzUmVxdWVzdCk6IE9ic2VydmFibGU8QmF0Y2g+IHtcbiAgICAgICAgY29uc3QgYXBpUmVxdWVzdDogUmVxdWVzdCA9IG5ldyBSZXF1ZXN0LkJ1aWxkZXIoKVxuICAgICAgICAgICAgLndpdGhUeXBlKEh0dHBSZXF1ZXN0VHlwZS5HRVQpXG4gICAgICAgICAgICAud2l0aFBhdGgodGhpcy5jb3Vyc2VTZXJ2aWNlQ29uZmlnLmFwaVBhdGggKyB0aGlzLkdFVF9CQVRDSF9ERVRBSUxTX0VORFBPSU5UICsgcmVxdWVzdC5iYXRjaElkKVxuICAgICAgICAgICAgLndpdGhCZWFyZXJUb2tlbih0cnVlKVxuICAgICAgICAgICAgLndpdGhVc2VyVG9rZW4odHJ1ZSlcbiAgICAgICAgICAgIC5idWlsZCgpO1xuXG4gICAgICAgIHJldHVybiB0aGlzLmFwaVNlcnZpY2UuZmV0Y2g8eyByZXN1bHQ6IHsgcmVzcG9uc2U6IEJhdGNoIH0gfT4oYXBpUmVxdWVzdClcbiAgICAgICAgICAgIC5waXBlKFxuICAgICAgICAgICAgICAgIG1hcCgocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmJvZHkucmVzdWx0LnJlc3BvbnNlO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApO1xuICAgIH1cbn1cbiJdfQ==