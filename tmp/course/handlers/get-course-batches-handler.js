import { HttpRequestType, Request } from '../../api';
import { map } from 'rxjs/operators';
var GetCourseBatchesHandler = /** @class */ (function () {
    function GetCourseBatchesHandler(apiService, courseServiceConfig) {
        this.apiService = apiService;
        this.courseServiceConfig = courseServiceConfig;
        this.GET_COURSE_BATCHES = '/batch/list?creatorDetails';
    }
    GetCourseBatchesHandler.prototype.handle = function (request) {
        var apiRequest = new Request.Builder()
            .withType(HttpRequestType.POST)
            .withPath(this.courseServiceConfig.apiPath + this.GET_COURSE_BATCHES)
            .withBearerToken(true)
            .withUserToken(false)
            .withBody({ request: request })
            .build();
        return this.apiService.fetch(apiRequest)
            .pipe(map(function (response) {
            return Array.from(new Set(response.body.result.response.content));
        }));
    };
    return GetCourseBatchesHandler;
}());
export { GetCourseBatchesHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWNvdXJzZS1iYXRjaGVzLWhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY291cnNlL2hhbmRsZXJzL2dldC1jb3Vyc2UtYmF0Y2hlcy1oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBZ0MsZUFBZSxFQUFFLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUlsRixPQUFPLEVBQUMsR0FBRyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkM7SUFHSSxpQ0FBb0IsVUFBc0IsRUFDdEIsbUJBQXdDO1FBRHhDLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtRQUgzQyx1QkFBa0IsR0FBRyw0QkFBNEIsQ0FBQztJQUluRSxDQUFDO0lBRUQsd0NBQU0sR0FBTixVQUFPLE9BQTZCO1FBQ2hDLElBQU0sVUFBVSxHQUFZLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRTthQUM1QyxRQUFRLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQzthQUM5QixRQUFRLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUM7YUFDcEUsZUFBZSxDQUFDLElBQUksQ0FBQzthQUNyQixhQUFhLENBQUMsS0FBSyxDQUFDO2FBQ3BCLFFBQVEsQ0FBQyxFQUFDLE9BQU8sU0FBQSxFQUFDLENBQUM7YUFDbkIsS0FBSyxFQUFFLENBQUM7UUFFYixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFrRCxVQUFVLENBQUM7YUFDcEYsSUFBSSxDQUNELEdBQUcsQ0FBQyxVQUFDLFFBQVE7WUFDVCxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQVEsSUFBSSxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDN0UsQ0FBQyxDQUFDLENBQ0wsQ0FBQztJQUNWLENBQUM7SUFDTCw4QkFBQztBQUFELENBQUMsQUF2QkQsSUF1QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FwaVJlcXVlc3RIYW5kbGVyLCBBcGlTZXJ2aWNlLCBIdHRwUmVxdWVzdFR5cGUsIFJlcXVlc3R9IGZyb20gJy4uLy4uL2FwaSc7XG5pbXBvcnQge0JhdGNoLCBDb3Vyc2VCYXRjaGVzUmVxdWVzdCwgQ291cnNlU2VydmljZUNvbmZpZ30gZnJvbSAnLi4nO1xuaW1wb3J0IHtDb3Vyc2VCYXRjaGVzUmVzcG9uc2V9IGZyb20gJy4uL2RlZi9jb3Vyc2UtYmF0Y2hlcy1yZXNwb25zZSc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHttYXB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuZXhwb3J0IGNsYXNzIEdldENvdXJzZUJhdGNoZXNIYW5kbGVyIGltcGxlbWVudHMgQXBpUmVxdWVzdEhhbmRsZXI8Q291cnNlQmF0Y2hlc1JlcXVlc3QsIEJhdGNoW10+IHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IEdFVF9DT1VSU0VfQkFUQ0hFUyA9ICcvYmF0Y2gvbGlzdD9jcmVhdG9yRGV0YWlscyc7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwaVNlcnZpY2U6IEFwaVNlcnZpY2UsXG4gICAgICAgICAgICAgICAgcHJpdmF0ZSBjb3Vyc2VTZXJ2aWNlQ29uZmlnOiBDb3Vyc2VTZXJ2aWNlQ29uZmlnKSB7XG4gICAgfVxuXG4gICAgaGFuZGxlKHJlcXVlc3Q6IENvdXJzZUJhdGNoZXNSZXF1ZXN0KTogT2JzZXJ2YWJsZTxCYXRjaFtdPiB7XG4gICAgICAgIGNvbnN0IGFwaVJlcXVlc3Q6IFJlcXVlc3QgPSBuZXcgUmVxdWVzdC5CdWlsZGVyKClcbiAgICAgICAgICAgIC53aXRoVHlwZShIdHRwUmVxdWVzdFR5cGUuUE9TVClcbiAgICAgICAgICAgIC53aXRoUGF0aCh0aGlzLmNvdXJzZVNlcnZpY2VDb25maWcuYXBpUGF0aCArIHRoaXMuR0VUX0NPVVJTRV9CQVRDSEVTKVxuICAgICAgICAgICAgLndpdGhCZWFyZXJUb2tlbih0cnVlKVxuICAgICAgICAgICAgLndpdGhVc2VyVG9rZW4oZmFsc2UpXG4gICAgICAgICAgICAud2l0aEJvZHkoe3JlcXVlc3R9KVxuICAgICAgICAgICAgLmJ1aWxkKCk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuYXBpU2VydmljZS5mZXRjaDx7IHJlc3VsdDogeyByZXNwb25zZTogQ291cnNlQmF0Y2hlc1Jlc3BvbnNlIH0gfT4oYXBpUmVxdWVzdClcbiAgICAgICAgICAgIC5waXBlKFxuICAgICAgICAgICAgICAgIG1hcCgocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5LmZyb208QmF0Y2g+KG5ldyBTZXQocmVzcG9uc2UuYm9keS5yZXN1bHQucmVzcG9uc2UuY29udGVudCkpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApO1xuICAgIH1cbn1cbiJdfQ==