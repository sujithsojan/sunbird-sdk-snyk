import { HttpRequestType, Request } from '../../api';
import { map } from 'rxjs/operators';
var UnenrollCourseHandler = /** @class */ (function () {
    function UnenrollCourseHandler(apiService, unenrollCourseServiceApiConfig) {
        this.apiService = apiService;
        this.unenrollCourseServiceApiConfig = unenrollCourseServiceApiConfig;
        this.GET_UNENROLL_COURSE_ENDPOINT = '/unenrol';
    }
    UnenrollCourseHandler.prototype.handle = function (unenrollCourseRequest) {
        var apiRequest = new Request.Builder()
            .withType(HttpRequestType.POST)
            .withPath(this.unenrollCourseServiceApiConfig.apiPath + this.GET_UNENROLL_COURSE_ENDPOINT)
            .withBearerToken(true)
            .withUserToken(true)
            .withBody({ request: unenrollCourseRequest })
            .build();
        return this.apiService.fetch(apiRequest)
            .pipe(map(function (success) {
            return success.body.result.response === 'SUCCESS';
        }));
    };
    return UnenrollCourseHandler;
}());
export { UnenrollCourseHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5lbnJvbGwtY291cnNlLWhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY291cnNlL2hhbmRsZXJzL3VuZW5yb2xsLWNvdXJzZS1oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBZ0MsZUFBZSxFQUFFLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUdsRixPQUFPLEVBQUMsR0FBRyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkM7SUFHSSwrQkFBb0IsVUFBc0IsRUFDdEIsOEJBQW1EO1FBRG5ELGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsbUNBQThCLEdBQTlCLDhCQUE4QixDQUFxQjtRQUh0RCxpQ0FBNEIsR0FBRyxVQUFVLENBQUM7SUFJM0QsQ0FBQztJQUVELHNDQUFNLEdBQU4sVUFBTyxxQkFBNEM7UUFDL0MsSUFBTSxVQUFVLEdBQVksSUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFO2FBQzVDLFFBQVEsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDO2FBQzlCLFFBQVEsQ0FBQyxJQUFJLENBQUMsOEJBQThCLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyw0QkFBNEIsQ0FBQzthQUN6RixlQUFlLENBQUMsSUFBSSxDQUFDO2FBQ3JCLGFBQWEsQ0FBQyxJQUFJLENBQUM7YUFDbkIsUUFBUSxDQUFDLEVBQUMsT0FBTyxFQUFFLHFCQUFxQixFQUFDLENBQUM7YUFDMUMsS0FBSyxFQUFFLENBQUM7UUFFYixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFtQyxVQUFVLENBQUM7YUFDckUsSUFBSSxDQUNELEdBQUcsQ0FBQyxVQUFDLE9BQU87WUFDUixPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsS0FBSyxTQUFTLENBQUM7UUFDdEQsQ0FBQyxDQUFDLENBQ0wsQ0FBQztJQUNWLENBQUM7SUFFTCw0QkFBQztBQUFELENBQUMsQUF4QkQsSUF3QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FwaVJlcXVlc3RIYW5kbGVyLCBBcGlTZXJ2aWNlLCBIdHRwUmVxdWVzdFR5cGUsIFJlcXVlc3R9IGZyb20gJy4uLy4uL2FwaSc7XG5pbXBvcnQge0NvdXJzZVNlcnZpY2VDb25maWcsIFVuZW5yb2xsQ291cnNlUmVxdWVzdH0gZnJvbSAnLi4nO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7bWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmV4cG9ydCBjbGFzcyBVbmVucm9sbENvdXJzZUhhbmRsZXIgaW1wbGVtZW50cyBBcGlSZXF1ZXN0SGFuZGxlcjxVbmVucm9sbENvdXJzZVJlcXVlc3QsIGJvb2xlYW4+IHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IEdFVF9VTkVOUk9MTF9DT1VSU0VfRU5EUE9JTlQgPSAnL3VuZW5yb2wnO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBhcGlTZXJ2aWNlOiBBcGlTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIHByaXZhdGUgdW5lbnJvbGxDb3Vyc2VTZXJ2aWNlQXBpQ29uZmlnOiBDb3Vyc2VTZXJ2aWNlQ29uZmlnKSB7XG4gICAgfVxuXG4gICAgaGFuZGxlKHVuZW5yb2xsQ291cnNlUmVxdWVzdDogVW5lbnJvbGxDb3Vyc2VSZXF1ZXN0KTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XG4gICAgICAgIGNvbnN0IGFwaVJlcXVlc3Q6IFJlcXVlc3QgPSBuZXcgUmVxdWVzdC5CdWlsZGVyKClcbiAgICAgICAgICAgIC53aXRoVHlwZShIdHRwUmVxdWVzdFR5cGUuUE9TVClcbiAgICAgICAgICAgIC53aXRoUGF0aCh0aGlzLnVuZW5yb2xsQ291cnNlU2VydmljZUFwaUNvbmZpZy5hcGlQYXRoICsgdGhpcy5HRVRfVU5FTlJPTExfQ09VUlNFX0VORFBPSU5UKVxuICAgICAgICAgICAgLndpdGhCZWFyZXJUb2tlbih0cnVlKVxuICAgICAgICAgICAgLndpdGhVc2VyVG9rZW4odHJ1ZSlcbiAgICAgICAgICAgIC53aXRoQm9keSh7cmVxdWVzdDogdW5lbnJvbGxDb3Vyc2VSZXF1ZXN0fSlcbiAgICAgICAgICAgIC5idWlsZCgpO1xuXG4gICAgICAgIHJldHVybiB0aGlzLmFwaVNlcnZpY2UuZmV0Y2g8eyByZXN1bHQ6IHsgcmVzcG9uc2U6IHN0cmluZyB9IH0+KGFwaVJlcXVlc3QpXG4gICAgICAgICAgICAucGlwZShcbiAgICAgICAgICAgICAgICBtYXAoKHN1Y2Nlc3MpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN1Y2Nlc3MuYm9keS5yZXN1bHQucmVzcG9uc2UgPT09ICdTVUNDRVNTJztcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKTtcbiAgICB9XG5cbn1cbiJdfQ==