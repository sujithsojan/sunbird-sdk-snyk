import { HttpRequestType, Request } from '../../api';
import { map } from 'rxjs/operators';
var GetDeviceProfileHandler = /** @class */ (function () {
    function GetDeviceProfileHandler(sdkConfig, deviceInfo, apiService) {
        this.sdkConfig = sdkConfig;
        this.deviceInfo = deviceInfo;
        this.apiService = apiService;
        this.deviceRegisterConfig = this.sdkConfig.deviceRegisterConfig;
        this.apiConfig = this.sdkConfig.apiConfig;
    }
    GetDeviceProfileHandler.prototype.handle = function () {
        return this.fetchFromServer();
    };
    GetDeviceProfileHandler.prototype.fetchFromServer = function () {
        return this.apiService.fetch(new Request.Builder()
            .withType(HttpRequestType.GET)
            .withPath(this.deviceRegisterConfig.apiPath + GetDeviceProfileHandler.GET_DEVICE_PROFILE_ENDPOINT
            + '/' + this.deviceInfo.getDeviceID())
            .withBearerToken(true)
            .build()).pipe(map(function (response) {
            return response.body.result;
        }));
    };
    GetDeviceProfileHandler.GET_DEVICE_PROFILE_ENDPOINT = '/profile';
    return GetDeviceProfileHandler;
}());
export { GetDeviceProfileHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWRldmljZS1wcm9maWxlLWhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZGV2aWNlLXJlZ2lzdGVyL2hhbmRsZXIvZ2V0LWRldmljZS1wcm9maWxlLWhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUEyQyxlQUFlLEVBQUUsT0FBTyxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBSzdGLE9BQU8sRUFBQyxHQUFHLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVuQztJQU9JLGlDQUNZLFNBQW9CLEVBQ3BCLFVBQXNCLEVBQ3RCLFVBQXNCO1FBRnRCLGNBQVMsR0FBVCxTQUFTLENBQVc7UUFDcEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUN0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBRTlCLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLG9CQUFvQixDQUFDO1FBQ2hFLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUM7SUFDOUMsQ0FBQztJQUVELHdDQUFNLEdBQU47UUFDSSxPQUFPLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsaURBQWUsR0FBZjtRQUNJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQ3hCLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRTthQUNoQixRQUFRLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQzthQUM3QixRQUFRLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLE9BQU8sR0FBRyx1QkFBdUIsQ0FBQywyQkFBMkI7Y0FDM0YsR0FBRyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUM7YUFDekMsZUFBZSxDQUFDLElBQUksQ0FBQzthQUNyQixLQUFLLEVBQUUsQ0FDZixDQUFDLElBQUksQ0FDRixHQUFHLENBQUMsVUFBQyxRQUFRO1lBQ1QsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNoQyxDQUFDLENBQUMsQ0FDTCxDQUFDO0lBQ04sQ0FBQztJQS9CdUIsbURBQTJCLEdBQUcsVUFBVSxDQUFDO0lBaUNyRSw4QkFBQztDQUFBLEFBbkNELElBbUNDO1NBbkNZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXBpQ29uZmlnLCBBcGlSZXF1ZXN0SGFuZGxlciwgQXBpU2VydmljZSwgSHR0cFJlcXVlc3RUeXBlLCBSZXF1ZXN0fSBmcm9tICcuLi8uLi9hcGknO1xuaW1wb3J0IHtEZXZpY2VQcm9maWxlUmVzcG9uc2UsIERldmljZVJlZ2lzdGVyQ29uZmlnfSBmcm9tICcuLic7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtEZXZpY2VJbmZvfSBmcm9tICcuLi8uLi91dGlsL2RldmljZSc7XG5pbXBvcnQge1Nka0NvbmZpZ30gZnJvbSAnLi4vLi4vc2RrLWNvbmZpZyc7XG5pbXBvcnQge21hcH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5leHBvcnQgY2xhc3MgR2V0RGV2aWNlUHJvZmlsZUhhbmRsZXIgaW1wbGVtZW50cyBBcGlSZXF1ZXN0SGFuZGxlcjx1bmRlZmluZWQsIERldmljZVByb2ZpbGVSZXNwb25zZT4ge1xuXG4gICAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgR0VUX0RFVklDRV9QUk9GSUxFX0VORFBPSU5UID0gJy9wcm9maWxlJztcblxuICAgIHByaXZhdGUgcmVhZG9ubHkgZGV2aWNlUmVnaXN0ZXJDb25maWc6IERldmljZVJlZ2lzdGVyQ29uZmlnO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgYXBpQ29uZmlnOiBBcGlDb25maWc7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSBzZGtDb25maWc6IFNka0NvbmZpZyxcbiAgICAgICAgcHJpdmF0ZSBkZXZpY2VJbmZvOiBEZXZpY2VJbmZvLFxuICAgICAgICBwcml2YXRlIGFwaVNlcnZpY2U6IEFwaVNlcnZpY2VcbiAgICApIHtcbiAgICAgICAgdGhpcy5kZXZpY2VSZWdpc3RlckNvbmZpZyA9IHRoaXMuc2RrQ29uZmlnLmRldmljZVJlZ2lzdGVyQ29uZmlnO1xuICAgICAgICB0aGlzLmFwaUNvbmZpZyA9IHRoaXMuc2RrQ29uZmlnLmFwaUNvbmZpZztcbiAgICB9XG5cbiAgICBoYW5kbGUoKTogT2JzZXJ2YWJsZTxEZXZpY2VQcm9maWxlUmVzcG9uc2U+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmV0Y2hGcm9tU2VydmVyKCk7XG4gICAgfVxuXG4gICAgZmV0Y2hGcm9tU2VydmVyKCk6IE9ic2VydmFibGU8RGV2aWNlUHJvZmlsZVJlc3BvbnNlPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmFwaVNlcnZpY2UuZmV0Y2g8eyByZXN1bHQ6IERldmljZVByb2ZpbGVSZXNwb25zZSB9PihcbiAgICAgICAgICAgIG5ldyBSZXF1ZXN0LkJ1aWxkZXIoKVxuICAgICAgICAgICAgICAgIC53aXRoVHlwZShIdHRwUmVxdWVzdFR5cGUuR0VUKVxuICAgICAgICAgICAgICAgIC53aXRoUGF0aCh0aGlzLmRldmljZVJlZ2lzdGVyQ29uZmlnLmFwaVBhdGggKyBHZXREZXZpY2VQcm9maWxlSGFuZGxlci5HRVRfREVWSUNFX1BST0ZJTEVfRU5EUE9JTlRcbiAgICAgICAgICAgICAgICAgICAgKyAnLycgKyB0aGlzLmRldmljZUluZm8uZ2V0RGV2aWNlSUQoKSlcbiAgICAgICAgICAgICAgICAud2l0aEJlYXJlclRva2VuKHRydWUpXG4gICAgICAgICAgICAgICAgLmJ1aWxkKClcbiAgICAgICAgKS5waXBlKFxuICAgICAgICAgICAgbWFwKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5ib2R5LnJlc3VsdDtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgfVxuXG59XG4iXX0=