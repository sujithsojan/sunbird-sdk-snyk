import { CachedItemRequestSourceFrom } from '../../key-value-store';
var GroupActivityServiceImpl = /** @class */ (function () {
    function GroupActivityServiceImpl(groupActivityService, cachedItemStore) {
        this.groupActivityService = groupActivityService;
        this.cachedItemStore = cachedItemStore;
    }
    GroupActivityServiceImpl.prototype.getDataAggregation = function (request) {
        var _this = this;
        return this.cachedItemStore[request.from === CachedItemRequestSourceFrom.SERVER ? 'get' : 'getCached']("group-" + request.groupId + "-activity-" + request.activity.id + "-" + request.activity.type, GroupActivityServiceImpl.GROUP_ACTIVITY_DATA_AGGREGATION_KEY, 'ttl_' + GroupActivityServiceImpl.GROUP_ACTIVITY_DATA_AGGREGATION_KEY, function () { return _this.groupActivityService.getDataAggregation(request.groupId, request.activity, request.mergeGroup, request.leafNodesCount); });
    };
    GroupActivityServiceImpl.prototype.getDataForDashlets = function (hierarchyData, aggData) {
        return this.groupActivityService.getDataForDashlets(hierarchyData, aggData);
    };
    GroupActivityServiceImpl.GROUP_ACTIVITY_DATA_AGGREGATION_KEY = 'GROUP_ACTIVITY_DATA_AGGREGATION-';
    return GroupActivityServiceImpl;
}());
export { GroupActivityServiceImpl };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAtYWN0aXZpdHktc2VydmljZS1pbXBsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2dyb3VwL2ltcGwvZ3JvdXAtYWN0aXZpdHktc2VydmljZS1pbXBsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBQywyQkFBMkIsRUFBa0IsTUFBTSx1QkFBdUIsQ0FBQztBQUVuRjtJQUdJLGtDQUNZLG9CQUE0QyxFQUM1QyxlQUFnQztRQURoQyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXdCO1FBQzVDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtJQUU1QyxDQUFDO0lBRUQscURBQWtCLEdBQWxCLFVBQW1CLE9BQTRDO1FBQS9ELGlCQU9DO1FBTkcsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEtBQUssMkJBQTJCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUNwRyxXQUFTLE9BQU8sQ0FBQyxPQUFPLGtCQUFhLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxTQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBTSxFQUNuRix3QkFBd0IsQ0FBQyxtQ0FBbUMsRUFDNUQsTUFBTSxHQUFHLHdCQUF3QixDQUFDLG1DQUFtQyxFQUNyRSxjQUFNLE9BQUEsS0FBSSxDQUFDLG9CQUFvQixDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFBM0gsQ0FBMkgsQ0FDbEksQ0FBQztJQUNOLENBQUM7SUFFRCxxREFBa0IsR0FBbEIsVUFBbUIsYUFBYSxFQUFFLE9BQU87UUFDckMsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsa0JBQWtCLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ2hGLENBQUM7SUFuQnVCLDREQUFtQyxHQUFHLGtDQUFrQyxDQUFDO0lBb0JyRywrQkFBQztDQUFBLEFBckJELElBcUJDO1NBckJZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7R3JvdXBBY3Rpdml0eURhdGFBZ2dyZWdhdGlvbiwgR3JvdXBBY3Rpdml0eURhdGFBZ2dyZWdhdGlvblJlcXVlc3QsIEdyb3VwQWN0aXZpdHlTZXJ2aWNlfSBmcm9tICcuLic7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtDc0dyb3VwQWN0aXZpdHlTZXJ2aWNlfSBmcm9tICdAcHJvamVjdC1zdW5iaXJkL2NsaWVudC1zZXJ2aWNlcy9zZXJ2aWNlcy9ncm91cC9hY3Rpdml0eSc7XG5pbXBvcnQge0NhY2hlZEl0ZW1SZXF1ZXN0U291cmNlRnJvbSwgQ2FjaGVkSXRlbVN0b3JlfSBmcm9tICcuLi8uLi9rZXktdmFsdWUtc3RvcmUnO1xuXG5leHBvcnQgY2xhc3MgR3JvdXBBY3Rpdml0eVNlcnZpY2VJbXBsIGltcGxlbWVudHMgR3JvdXBBY3Rpdml0eVNlcnZpY2Uge1xuICAgIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IEdST1VQX0FDVElWSVRZX0RBVEFfQUdHUkVHQVRJT05fS0VZID0gJ0dST1VQX0FDVElWSVRZX0RBVEFfQUdHUkVHQVRJT04tJztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIGdyb3VwQWN0aXZpdHlTZXJ2aWNlOiBDc0dyb3VwQWN0aXZpdHlTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIGNhY2hlZEl0ZW1TdG9yZTogQ2FjaGVkSXRlbVN0b3JlXG4gICAgKSB7XG4gICAgfVxuXG4gICAgZ2V0RGF0YUFnZ3JlZ2F0aW9uKHJlcXVlc3Q6IEdyb3VwQWN0aXZpdHlEYXRhQWdncmVnYXRpb25SZXF1ZXN0KTogT2JzZXJ2YWJsZTxHcm91cEFjdGl2aXR5RGF0YUFnZ3JlZ2F0aW9uPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhY2hlZEl0ZW1TdG9yZVtyZXF1ZXN0LmZyb20gPT09IENhY2hlZEl0ZW1SZXF1ZXN0U291cmNlRnJvbS5TRVJWRVIgPyAnZ2V0JyA6ICdnZXRDYWNoZWQnXShcbiAgICAgICAgICBgZ3JvdXAtJHtyZXF1ZXN0Lmdyb3VwSWR9LWFjdGl2aXR5LSR7cmVxdWVzdC5hY3Rpdml0eS5pZH0tJHtyZXF1ZXN0LmFjdGl2aXR5LnR5cGV9YCxcbiAgICAgICAgICBHcm91cEFjdGl2aXR5U2VydmljZUltcGwuR1JPVVBfQUNUSVZJVFlfREFUQV9BR0dSRUdBVElPTl9LRVksXG4gICAgICAgICAgJ3R0bF8nICsgR3JvdXBBY3Rpdml0eVNlcnZpY2VJbXBsLkdST1VQX0FDVElWSVRZX0RBVEFfQUdHUkVHQVRJT05fS0VZLFxuICAgICAgICAgICgpID0+IHRoaXMuZ3JvdXBBY3Rpdml0eVNlcnZpY2UuZ2V0RGF0YUFnZ3JlZ2F0aW9uKHJlcXVlc3QuZ3JvdXBJZCwgcmVxdWVzdC5hY3Rpdml0eSwgcmVxdWVzdC5tZXJnZUdyb3VwLCByZXF1ZXN0LmxlYWZOb2Rlc0NvdW50KSxcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBnZXREYXRhRm9yRGFzaGxldHMoaGllcmFyY2h5RGF0YSwgYWdnRGF0YSk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyb3VwQWN0aXZpdHlTZXJ2aWNlLmdldERhdGFGb3JEYXNobGV0cyhoaWVyYXJjaHlEYXRhLCBhZ2dEYXRhKTtcbiAgICB9XG59XG4iXX0=