import { PageName } from '..';
import { CachedItemRequestSourceFrom } from '../../key-value-store';
import { DefaultRequestDelegate } from './delegates/default-request-delegate';
import { DialcodeRequestDelegate } from './delegates/dialcode-request-delegate';
import { CourseRequestDelegate } from './delegates/course-request-delegate';
var PageAssemblerFactory = /** @class */ (function () {
    function PageAssemblerFactory(apiService, pageApiServiceConfig, cachedItemStore, keyValueStore, sharedPreferences, frameworkService, authService, systemSettingsService, dbService, profileService) {
        this.apiService = apiService;
        this.pageApiServiceConfig = pageApiServiceConfig;
        this.cachedItemStore = cachedItemStore;
        this.keyValueStore = keyValueStore;
        this.sharedPreferences = sharedPreferences;
        this.frameworkService = frameworkService;
        this.authService = authService;
        this.systemSettingsService = systemSettingsService;
        this.dbService = dbService;
        this.profileService = profileService;
        this.defaultRequestDelegate = new DefaultRequestDelegate(apiService, pageApiServiceConfig, sharedPreferences, cachedItemStore, keyValueStore, authService, profileService, systemSettingsService);
        this.dialcodeRequestDelegate = new DialcodeRequestDelegate(this.defaultRequestDelegate, dbService);
        this.courseRequestDelegate = new CourseRequestDelegate(this.defaultRequestDelegate, authService, frameworkService, systemSettingsService);
    }
    PageAssemblerFactory.prototype.handle = function (request) {
        request.from = request.from || CachedItemRequestSourceFrom.CACHE;
        switch (request.name) {
            case PageName.COURSE: {
                return this.courseRequestDelegate.handle(request);
            }
            case PageName.DIAL_CODE: {
                return this.dialcodeRequestDelegate.handle(request);
            }
            default: {
                return this.defaultRequestDelegate.handle(request);
            }
        }
    };
    return PageAssemblerFactory;
}());
export { PageAssemblerFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1hc3NlbWJsZXItZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wYWdlL2hhbmRsZS9wYWdlLWFzc2VtYmxlci1mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBcUMsUUFBUSxFQUFvQixNQUFNLElBQUksQ0FBQztBQUNuRixPQUFPLEVBQUMsMkJBQTJCLEVBQWlDLE1BQU0sdUJBQXVCLENBQUM7QUFNbEcsT0FBTyxFQUFDLHNCQUFzQixFQUFDLE1BQU0sc0NBQXNDLENBQUM7QUFDNUUsT0FBTyxFQUFDLHVCQUF1QixFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFDOUUsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0scUNBQXFDLENBQUM7QUFJMUU7SUFLSSw4QkFDWSxVQUFzQixFQUN0QixvQkFBdUMsRUFDdkMsZUFBZ0MsRUFDaEMsYUFBNEIsRUFDNUIsaUJBQW9DLEVBQ3BDLGdCQUFrQyxFQUNsQyxXQUF3QixFQUN4QixxQkFBNEMsRUFDNUMsU0FBb0IsRUFDcEIsY0FBOEI7UUFUOUIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUN0Qix5QkFBb0IsR0FBcEIsb0JBQW9CLENBQW1CO1FBQ3ZDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtRQUNoQyxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUM1QixzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBQ3BDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFDeEIsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUF1QjtRQUM1QyxjQUFTLEdBQVQsU0FBUyxDQUFXO1FBQ3BCLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUV0QyxJQUFJLENBQUMsc0JBQXNCLEdBQUcsSUFBSSxzQkFBc0IsQ0FDcEQsVUFBVSxFQUNWLG9CQUFvQixFQUNwQixpQkFBaUIsRUFDakIsZUFBZSxFQUNmLGFBQWEsRUFDYixXQUFXLEVBQ1gsY0FBYyxFQUNkLHFCQUFxQixDQUN4QixDQUFDO1FBRUYsSUFBSSxDQUFDLHVCQUF1QixHQUFHLElBQUksdUJBQXVCLENBQ3RELElBQUksQ0FBQyxzQkFBc0IsRUFDM0IsU0FBUyxDQUNaLENBQUM7UUFFRixJQUFJLENBQUMscUJBQXFCLEdBQUcsSUFBSSxxQkFBcUIsQ0FDbEQsSUFBSSxDQUFDLHNCQUFzQixFQUMzQixXQUFXLEVBQ1gsZ0JBQWdCLEVBQ2hCLHFCQUFxQixDQUN4QixDQUFDO0lBQ04sQ0FBQztJQUVELHFDQUFNLEdBQU4sVUFBTyxPQUE2QjtRQUNoQyxPQUFPLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLElBQUksMkJBQTJCLENBQUMsS0FBSyxDQUFDO1FBRWpFLFFBQVEsT0FBTyxDQUFDLElBQUksRUFBRTtZQUNsQixLQUFLLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDbEIsT0FBTyxJQUFJLENBQUMscUJBQXFCLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2FBQ3JEO1lBQ0QsS0FBSyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQ3JCLE9BQU8sSUFBSSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUN2RDtZQUNELE9BQU8sQ0FBQyxDQUFDO2dCQUNMLE9BQU8sSUFBSSxDQUFDLHNCQUFzQixDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUN0RDtTQUNKO0lBQ0wsQ0FBQztJQUNMLDJCQUFDO0FBQUQsQ0FBQyxBQXhERCxJQXdEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXBpUmVxdWVzdEhhbmRsZXIsIEFwaVNlcnZpY2V9IGZyb20gJy4uLy4uL2FwaSc7XG5pbXBvcnQge1BhZ2VBc3NlbWJsZSwgUGFnZUFzc2VtYmxlQ3JpdGVyaWEsIFBhZ2VOYW1lLCBQYWdlU2VydmljZUNvbmZpZ30gZnJvbSAnLi4nO1xuaW1wb3J0IHtDYWNoZWRJdGVtUmVxdWVzdFNvdXJjZUZyb20sIENhY2hlZEl0ZW1TdG9yZSwgS2V5VmFsdWVTdG9yZX0gZnJvbSAnLi4vLi4va2V5LXZhbHVlLXN0b3JlJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge1NoYXJlZFByZWZlcmVuY2VzfSBmcm9tICcuLi8uLi91dGlsL3NoYXJlZC1wcmVmZXJlbmNlcyc7XG5pbXBvcnQge0F1dGhTZXJ2aWNlfSBmcm9tICcuLi8uLi9hdXRoJztcbmltcG9ydCB7RnJhbWV3b3JrU2VydmljZX0gZnJvbSAnLi4vLi4vZnJhbWV3b3JrJztcbmltcG9ydCB7U3lzdGVtU2V0dGluZ3NTZXJ2aWNlfSBmcm9tICcuLi8uLi9zeXN0ZW0tc2V0dGluZ3MnO1xuaW1wb3J0IHtEZWZhdWx0UmVxdWVzdERlbGVnYXRlfSBmcm9tICcuL2RlbGVnYXRlcy9kZWZhdWx0LXJlcXVlc3QtZGVsZWdhdGUnO1xuaW1wb3J0IHtEaWFsY29kZVJlcXVlc3REZWxlZ2F0ZX0gZnJvbSAnLi9kZWxlZ2F0ZXMvZGlhbGNvZGUtcmVxdWVzdC1kZWxlZ2F0ZSc7XG5pbXBvcnQge0NvdXJzZVJlcXVlc3REZWxlZ2F0ZX0gZnJvbSAnLi9kZWxlZ2F0ZXMvY291cnNlLXJlcXVlc3QtZGVsZWdhdGUnO1xuaW1wb3J0IHtEYlNlcnZpY2V9IGZyb20gJy4uLy4uL2RiJztcbmltcG9ydCB7IFByb2ZpbGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vcHJvZmlsZSc7XG5cbmV4cG9ydCBjbGFzcyBQYWdlQXNzZW1ibGVyRmFjdG9yeSBpbXBsZW1lbnRzIEFwaVJlcXVlc3RIYW5kbGVyPFBhZ2VBc3NlbWJsZUNyaXRlcmlhLCBQYWdlQXNzZW1ibGU+IHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGRlZmF1bHRSZXF1ZXN0RGVsZWdhdGU6IERlZmF1bHRSZXF1ZXN0RGVsZWdhdGU7XG4gICAgcHJpdmF0ZSByZWFkb25seSBkaWFsY29kZVJlcXVlc3REZWxlZ2F0ZTogRGlhbGNvZGVSZXF1ZXN0RGVsZWdhdGU7XG4gICAgcHJpdmF0ZSByZWFkb25seSBjb3Vyc2VSZXF1ZXN0RGVsZWdhdGU6IENvdXJzZVJlcXVlc3REZWxlZ2F0ZTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIGFwaVNlcnZpY2U6IEFwaVNlcnZpY2UsXG4gICAgICAgIHByaXZhdGUgcGFnZUFwaVNlcnZpY2VDb25maWc6IFBhZ2VTZXJ2aWNlQ29uZmlnLFxuICAgICAgICBwcml2YXRlIGNhY2hlZEl0ZW1TdG9yZTogQ2FjaGVkSXRlbVN0b3JlLFxuICAgICAgICBwcml2YXRlIGtleVZhbHVlU3RvcmU6IEtleVZhbHVlU3RvcmUsXG4gICAgICAgIHByaXZhdGUgc2hhcmVkUHJlZmVyZW5jZXM6IFNoYXJlZFByZWZlcmVuY2VzLFxuICAgICAgICBwcml2YXRlIGZyYW1ld29ya1NlcnZpY2U6IEZyYW1ld29ya1NlcnZpY2UsXG4gICAgICAgIHByaXZhdGUgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIHN5c3RlbVNldHRpbmdzU2VydmljZTogU3lzdGVtU2V0dGluZ3NTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIGRiU2VydmljZTogRGJTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIHByb2ZpbGVTZXJ2aWNlOiBQcm9maWxlU2VydmljZVxuICAgICkge1xuICAgICAgICB0aGlzLmRlZmF1bHRSZXF1ZXN0RGVsZWdhdGUgPSBuZXcgRGVmYXVsdFJlcXVlc3REZWxlZ2F0ZShcbiAgICAgICAgICAgIGFwaVNlcnZpY2UsXG4gICAgICAgICAgICBwYWdlQXBpU2VydmljZUNvbmZpZyxcbiAgICAgICAgICAgIHNoYXJlZFByZWZlcmVuY2VzLFxuICAgICAgICAgICAgY2FjaGVkSXRlbVN0b3JlLFxuICAgICAgICAgICAga2V5VmFsdWVTdG9yZSxcbiAgICAgICAgICAgIGF1dGhTZXJ2aWNlLFxuICAgICAgICAgICAgcHJvZmlsZVNlcnZpY2UsXG4gICAgICAgICAgICBzeXN0ZW1TZXR0aW5nc1NlcnZpY2VcbiAgICAgICAgKTtcblxuICAgICAgICB0aGlzLmRpYWxjb2RlUmVxdWVzdERlbGVnYXRlID0gbmV3IERpYWxjb2RlUmVxdWVzdERlbGVnYXRlKFxuICAgICAgICAgICAgdGhpcy5kZWZhdWx0UmVxdWVzdERlbGVnYXRlLFxuICAgICAgICAgICAgZGJTZXJ2aWNlXG4gICAgICAgICk7XG5cbiAgICAgICAgdGhpcy5jb3Vyc2VSZXF1ZXN0RGVsZWdhdGUgPSBuZXcgQ291cnNlUmVxdWVzdERlbGVnYXRlKFxuICAgICAgICAgICAgdGhpcy5kZWZhdWx0UmVxdWVzdERlbGVnYXRlLFxuICAgICAgICAgICAgYXV0aFNlcnZpY2UsXG4gICAgICAgICAgICBmcmFtZXdvcmtTZXJ2aWNlLFxuICAgICAgICAgICAgc3lzdGVtU2V0dGluZ3NTZXJ2aWNlLFxuICAgICAgICApO1xuICAgIH1cblxuICAgIGhhbmRsZShyZXF1ZXN0OiBQYWdlQXNzZW1ibGVDcml0ZXJpYSk6IE9ic2VydmFibGU8UGFnZUFzc2VtYmxlPiB7XG4gICAgICAgIHJlcXVlc3QuZnJvbSA9IHJlcXVlc3QuZnJvbSB8fCBDYWNoZWRJdGVtUmVxdWVzdFNvdXJjZUZyb20uQ0FDSEU7XG5cbiAgICAgICAgc3dpdGNoIChyZXF1ZXN0Lm5hbWUpIHtcbiAgICAgICAgICAgIGNhc2UgUGFnZU5hbWUuQ09VUlNFOiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY291cnNlUmVxdWVzdERlbGVnYXRlLmhhbmRsZShyZXF1ZXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgUGFnZU5hbWUuRElBTF9DT0RFOiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGlhbGNvZGVSZXF1ZXN0RGVsZWdhdGUuaGFuZGxlKHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlZmF1bHRSZXF1ZXN0RGVsZWdhdGUuaGFuZGxlKHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIl19