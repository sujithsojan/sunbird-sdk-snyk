import { DbConstants } from '../../db';
export var ProfileEntry;
(function (ProfileEntry) {
    ProfileEntry._ID = '_id';
    ProfileEntry.TABLE_NAME = 'profiles';
    ProfileEntry.COLUMN_NAME_UID = 'uid';
    ProfileEntry.COLUMN_NAME_HANDLE = 'handle';
    ProfileEntry.COLUMN_NAME_AVATAR = 'avatar';
    ProfileEntry.COLUMN_NAME_AGE = 'age';
    ProfileEntry.COLUMN_NAME_GENDER = 'gender';
    ProfileEntry.COLUMN_NAME_STANDARD = 'standard';
    ProfileEntry.COLUMN_NAME_LANGUAGE = 'language';
    ProfileEntry.COLUMN_NAME_DAY = 'day';
    ProfileEntry.COLUMN_NAME_MONTH = 'month';
    ProfileEntry.COLUMN_NAME_IS_GROUP_USER = 'is_group_user';
    ProfileEntry.COLUMN_NAME_CREATED_AT = 'created_at';
    ProfileEntry.COLUMN_NAME_MEDIUM = 'medium';
    ProfileEntry.COLUMN_NAME_BOARD = 'board';
    ProfileEntry.COLUMN_NAME_PROFILE_IMAGE = 'profile_image';
    ProfileEntry.COLUMN_NAME_SUBJECT = 'subject';
    ProfileEntry.COLUMN_NAME_PROFILE_TYPE = 'profile_type'; // default TEACHER
    ProfileEntry.COLUMN_NAME_GRADE = 'grade';
    ProfileEntry.COLUMN_NAME_SYLLABUS = 'syllabus';
    ProfileEntry.COLUMN_NAME_SOURCE = 'source';
    ProfileEntry.COLUMN_NAME_GRADE_VALUE = 'grade_value';
    ProfileEntry.COLUMN_VALUE = 'value';
    ProfileEntry.COLUMN_NAME_CATEGORIES = 'categories';
    ProfileEntry.getCreateEntry = function () {
        return 'CREATE TABLE IF NOT EXISTS ' + ProfileEntry.TABLE_NAME + '(' +
            ProfileEntry._ID + DbConstants.SPACE + 'INTEGER PRIMARY KEY,' +
            ProfileEntry.COLUMN_NAME_UID + DbConstants.SPACE + DbConstants.TEXT_TYPE + ' UNIQUE NOT NULL' + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_HANDLE + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_AVATAR + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_AGE + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_GENDER + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_STANDARD + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_LANGUAGE + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_DAY + DbConstants.SPACE + DbConstants.INT_TYPE + ' NOT NULL DEFAULT -1' + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_MONTH + DbConstants.SPACE + DbConstants.INT_TYPE + ' NOT NULL DEFAULT -1' + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_IS_GROUP_USER + DbConstants.SPACE + DbConstants.INT_TYPE + ' NOT NULL DEFAULT 0' + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_CREATED_AT + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_MEDIUM + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_BOARD + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_SUBJECT + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_PROFILE_IMAGE + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_PROFILE_TYPE + DbConstants.SPACE + DbConstants.TEXT_TYPE + ' DEFAULT "teacher"' + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_GRADE + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_CATEGORIES + DbConstants.SPACE + DbConstants.TEXT_TYPE + '  DEFAULT \'\'' + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_SYLLABUS + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_SOURCE + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_VALUE + DbConstants.SPACE + DbConstants.TEXT_TYPE + ' DEFAULT ""' + DbConstants.COMMA_SEP +
            ProfileEntry.COLUMN_NAME_GRADE_VALUE + DbConstants.SPACE + DbConstants.TEXT_TYPE +
            ')';
    };
    ProfileEntry.deleteTable = function () {
        return 'DROP TABLE IF EXISTS ' + ProfileEntry.TABLE_NAME;
    };
    ProfileEntry.getAlterEntryForProfileSyllabus = function () {
        return 'ALTER TABLE ' + ProfileEntry.TABLE_NAME + ' ADD COLUMN ' + DbConstants.SPACE +
            ProfileEntry.COLUMN_NAME_SYLLABUS + DbConstants.TEXT_TYPE + '  DEFAULT \'\';';
    };
    ProfileEntry.getAlterEntryForProfileCategories = function () {
        return 'ALTER TABLE ' + ProfileEntry.TABLE_NAME + ' ADD COLUMN ' + DbConstants.SPACE +
            ProfileEntry.COLUMN_NAME_CATEGORIES + DbConstants.SPACE + DbConstants.TEXT_TYPE + '  DEFAULT \'\';';
    };
})(ProfileEntry || (ProfileEntry = {}));
export var UserEntry;
(function (UserEntry) {
    UserEntry._ID = '_id';
    UserEntry.TABLE_NAME = 'users';
    UserEntry.COLUMN_NAME_UID = 'uid';
    UserEntry.getCreateEntry = function () {
        return 'CREATE TABLE IF NOT EXISTS ' + UserEntry.TABLE_NAME + ' (' +
            UserEntry._ID + ' INTEGER PRIMARY KEY,' +
            UserEntry.COLUMN_NAME_UID + DbConstants.SPACE + DbConstants.TEXT_TYPE +
            ' )';
    };
    UserEntry.deleteTable = function () {
        return 'DROP TABLE IF EXISTS ' + UserEntry.TABLE_NAME;
    };
})(UserEntry || (UserEntry = {}));
export var GroupProfileEntry;
(function (GroupProfileEntry) {
    GroupProfileEntry.TABLE_NAME = 'group_profile';
    GroupProfileEntry._ID = '_id';
    GroupProfileEntry.COLUMN_NAME_UID = 'uid';
    GroupProfileEntry.COLUMN_NAME_GID = 'gid';
    GroupProfileEntry.COLUMN_NAME_EPOCH_TIMESTAMP = 'epoch_timestamp';
    GroupProfileEntry.getCreateEntry = function () {
        return 'CREATE TABLE IF NOT EXISTS ' + GroupProfileEntry.TABLE_NAME + ' (' +
            GroupProfileEntry._ID + ' INTEGER PRIMARY KEY' + DbConstants.COMMA_SEP +
            GroupProfileEntry.COLUMN_NAME_GID + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            GroupProfileEntry.COLUMN_NAME_UID + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            GroupProfileEntry.COLUMN_NAME_EPOCH_TIMESTAMP + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            'UNIQUE (' + GroupProfileEntry.COLUMN_NAME_GID + DbConstants.COMMA_SEP + GroupProfileEntry.COLUMN_NAME_UID + ') ON CONFLICT REPLACE' +
            ')';
    };
    GroupProfileEntry.deleteTable = function () {
        return 'DROP TABLE IF EXISTS' + GroupProfileEntry.TABLE_NAME;
    };
})(GroupProfileEntry || (GroupProfileEntry = {}));
export var GroupEntry;
(function (GroupEntry) {
    GroupEntry.TABLE_NAME = 'groups';
    GroupEntry._ID = '_id';
    GroupEntry.COLUMN_NAME_GID = 'gid';
    GroupEntry.COLUMN_NAME_NAME = 'name';
    GroupEntry.COLUMN_NAME_SYLLABUS = 'syllabus';
    GroupEntry.COLUMN_NAME_GRADE = 'grade';
    GroupEntry.COLUMN_NAME_GRADE_VALUE = 'grade_value';
    GroupEntry.COLUMN_NAME_CREATED_AT = 'created_at';
    GroupEntry.COLUMN_NAME_UPDATED_AT = 'updated_at';
    GroupEntry.getCreateEntry = function () {
        return 'CREATE TABLE IF NOT EXISTS ' + GroupEntry.TABLE_NAME + ' (' +
            GroupEntry._ID + ' INTEGER PRIMARY KEY' + DbConstants.COMMA_SEP +
            GroupEntry.COLUMN_NAME_GID + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            GroupEntry.COLUMN_NAME_NAME + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            GroupEntry.COLUMN_NAME_SYLLABUS + DbConstants.SPACE + DbConstants.TEXT_TYPE + ' DEFAULT ""' + DbConstants.COMMA_SEP +
            GroupEntry.COLUMN_NAME_GRADE + DbConstants.SPACE + DbConstants.TEXT_TYPE + ' DEFAULT ""' + DbConstants.COMMA_SEP +
            GroupEntry.COLUMN_NAME_GRADE_VALUE + DbConstants.SPACE + DbConstants.TEXT_TYPE + ' DEFAULT ""' + DbConstants.COMMA_SEP +
            GroupEntry.COLUMN_NAME_CREATED_AT + ' INTEGER' + DbConstants.COMMA_SEP +
            GroupEntry.COLUMN_NAME_UPDATED_AT + ' INTEGER' + ' )';
    };
    GroupEntry.deleteTable = function () {
        return 'DROP TABLE IF EXISTS' + GroupEntry.TABLE_NAME;
    };
})(GroupEntry || (GroupEntry = {}));
export var ImportedMetadataEntry;
(function (ImportedMetadataEntry) {
    ImportedMetadataEntry._ID = '_id';
    ImportedMetadataEntry.TABLE_NAME = 'imported_metadata';
    ImportedMetadataEntry.COLUMN_NAME_IMPORTED_ID = 'imported_id';
    ImportedMetadataEntry.COLUMN_NAME_DEVICE_ID = 'device_id';
    ImportedMetadataEntry.COLUMN_NAME_COUNT = 'count';
    ImportedMetadataEntry.getCreateEntry = function () {
        return 'CREATE TABLE IF NOT EXISTS ' + ImportedMetadataEntry.TABLE_NAME + ' (' +
            ImportedMetadataEntry._ID + ' INTEGER PRIMARY KEY,' +
            ImportedMetadataEntry.COLUMN_NAME_IMPORTED_ID + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ImportedMetadataEntry.COLUMN_NAME_DEVICE_ID + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ImportedMetadataEntry.COLUMN_NAME_COUNT + DbConstants.SPACE + DbConstants.INT_TYPE +
            ' )';
    };
    ImportedMetadataEntry.getDeleteEntry = function () {
        return 'DROP TABLE IF EXISTS ' + ImportedMetadataEntry.TABLE_NAME;
    };
})(ImportedMetadataEntry || (ImportedMetadataEntry = {}));
export var LearnerAssessmentsEntry;
(function (LearnerAssessmentsEntry) {
    LearnerAssessmentsEntry._ID = '_id';
    LearnerAssessmentsEntry.TABLE_NAME = 'learner_assessments';
    LearnerAssessmentsEntry.COLUMN_NAME_UID = 'uid';
    LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID = 'content_id';
    LearnerAssessmentsEntry.COLUMN_NAME_QID = 'qid';
    LearnerAssessmentsEntry.COLUMN_NAME_Q_INDEX = 'qindex';
    LearnerAssessmentsEntry.COLUMN_NAME_CORRECT = 'correct';
    LearnerAssessmentsEntry.COLUMN_NAME_SCORE = 'score';
    LearnerAssessmentsEntry.COLUMN_NAME_MAX_SCORE = 'max_score';
    LearnerAssessmentsEntry.COLUMN_NAME_TIME_SPENT = 'time_spent';
    LearnerAssessmentsEntry.COLUMN_NAME_RES = 'res';
    LearnerAssessmentsEntry.COLUMN_NAME_TIMESTAMP = 'timestamp';
    LearnerAssessmentsEntry.COLUMN_NAME_Q_DESC = 'qdesc';
    LearnerAssessmentsEntry.COLUMN_NAME_Q_TITLE = 'qtitle';
    LearnerAssessmentsEntry.COLUMN_NAME_HIERARCHY_DATA = 'h_data';
    LearnerAssessmentsEntry.COLUMN_NAME_TOTAL_TS = 'total_ts';
    LearnerAssessmentsEntry.COLUMN_NAME_MARKS = 'marks';
    LearnerAssessmentsEntry.COLUMN_NAME_COUNT = 'occurence_count';
    LearnerAssessmentsEntry.COLUMN_NAME_TOTAL_MAX_SCORE = 'sum_max_score';
    LearnerAssessmentsEntry.COLUMN_NAME_USERS_COUNT = 'users_count';
    LearnerAssessmentsEntry.COLUMN_NAME_HANDLE = 'handle';
    LearnerAssessmentsEntry.getCreateEntry = function () {
        return 'CREATE TABLE IF NOT EXISTS ' + LearnerAssessmentsEntry.TABLE_NAME + ' (' +
            LearnerAssessmentsEntry._ID + ' INTEGER PRIMARY KEY,' +
            LearnerAssessmentsEntry.COLUMN_NAME_UID + DbConstants.SPACE + DbConstants.TEXT_TYPE + ' NOT NULL' + DbConstants.COMMA_SEP +
            LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            LearnerAssessmentsEntry.COLUMN_NAME_QID + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            LearnerAssessmentsEntry.COLUMN_NAME_Q_INDEX + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            LearnerAssessmentsEntry.COLUMN_NAME_CORRECT + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            LearnerAssessmentsEntry.COLUMN_NAME_SCORE + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            LearnerAssessmentsEntry.COLUMN_NAME_MAX_SCORE + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            LearnerAssessmentsEntry.COLUMN_NAME_TIME_SPENT + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            LearnerAssessmentsEntry.COLUMN_NAME_RES + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            LearnerAssessmentsEntry.COLUMN_NAME_TIMESTAMP + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            LearnerAssessmentsEntry.COLUMN_NAME_Q_DESC + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            LearnerAssessmentsEntry.COLUMN_NAME_Q_TITLE + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            LearnerAssessmentsEntry.COLUMN_NAME_HIERARCHY_DATA + DbConstants.SPACE + DbConstants.TEXT_TYPE + '  DEFAULT \'\' ' +
            ' )';
    };
    LearnerAssessmentsEntry.getDeleteEntry = function () {
        return 'DROP TABLE IF EXISTS ' + LearnerAssessmentsEntry.TABLE_NAME;
    };
})(LearnerAssessmentsEntry || (LearnerAssessmentsEntry = {}));
export var LearnerSummaryEntry;
(function (LearnerSummaryEntry) {
    LearnerSummaryEntry._ID = '_id';
    LearnerSummaryEntry.TABLE_NAME = 'learner_content_summary';
    LearnerSummaryEntry.COLUMN_NAME_UID = 'uid';
    LearnerSummaryEntry.COLUMN_NAME_CONTENT_ID = 'content_id';
    LearnerSummaryEntry.COLUMN_NAME_AVG_TS = 'avg_ts';
    LearnerSummaryEntry.COLUMN_NAME_SESSIONS = 'sessions';
    LearnerSummaryEntry.COLUMN_NAME_TOTAL_TS = 'total_ts';
    LearnerSummaryEntry.COLUMN_NAME_LAST_UPDATED_ON = 'last_updated_on';
    LearnerSummaryEntry.COLUMN_NAME_HIERARCHY_DATA = 'h_data';
    LearnerSummaryEntry.COLUMN_NAME_NO_OF_QUESTIONS = 'no_of_questions';
    LearnerSummaryEntry.COLUMN_NAME_CORRECT_ANSWERS = 'correct_answers';
    LearnerSummaryEntry.COLUMN_NAME_TOTAL_TIME_SPENT = 'total_time_spent';
    LearnerSummaryEntry.COLUMN_NAME_TOTAL_MAX_SCORE = 'total_max_score';
    LearnerSummaryEntry.COLUMN_NAME_TOTAL_SCORE = 'total_score';
    LearnerSummaryEntry.getCreateEntry = function () {
        return 'CREATE TABLE IF NOT EXISTS ' + LearnerSummaryEntry.TABLE_NAME + ' (' +
            LearnerSummaryEntry._ID + ' INTEGER PRIMARY KEY,' +
            LearnerSummaryEntry.COLUMN_NAME_UID + DbConstants.SPACE + DbConstants.TEXT_TYPE + ' NOT NULL' + DbConstants.COMMA_SEP +
            LearnerSummaryEntry.COLUMN_NAME_CONTENT_ID + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            LearnerSummaryEntry.COLUMN_NAME_AVG_TS + DbConstants.SPACE + DbConstants.REAL_TYPE + DbConstants.COMMA_SEP +
            LearnerSummaryEntry.COLUMN_NAME_SESSIONS + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            LearnerSummaryEntry.COLUMN_NAME_TOTAL_TS + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            LearnerSummaryEntry.COLUMN_NAME_LAST_UPDATED_ON + DbConstants.SPACE + DbConstants.SPACE + DbConstants.INT_TYPE + DbConstants.COMMA_SEP +
            LearnerSummaryEntry.COLUMN_NAME_HIERARCHY_DATA + DbConstants.SPACE + DbConstants.TEXT_TYPE + DbConstants.COMMA_SEP +
            ' UNIQUE (' + LearnerSummaryEntry.COLUMN_NAME_UID + DbConstants.SPACE + DbConstants.COMMA_SEP + LearnerSummaryEntry.COLUMN_NAME_CONTENT_ID
            + DbConstants.COMMA_SEP + LearnerSummaryEntry.COLUMN_NAME_HIERARCHY_DATA + ') ON CONFLICT REPLACE' +
            ' )';
    };
    LearnerSummaryEntry.getDeleteEntry = function () {
        return 'DROP TABLE IF EXISTS ' + LearnerSummaryEntry.TABLE_NAME;
    };
})(LearnerSummaryEntry || (LearnerSummaryEntry = {}));
//# sourceMappingURL=data:application/json;base64,