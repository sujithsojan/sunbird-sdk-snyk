import { HttpRequestType, Request } from '../../api';
import { map } from 'rxjs/operators';
var GenerateOtpHandler = /** @class */ (function () {
    function GenerateOtpHandler(apiService, otpServiceConfig) {
        this.apiService = apiService;
        this.otpServiceConfig = otpServiceConfig;
        this.GET_GENERATE_OTP_ENDPOINT = '/generate';
    }
    GenerateOtpHandler.prototype.handle = function (request) {
        var apiRequest = new Request.Builder()
            .withType(HttpRequestType.POST)
            .withPath(this.otpServiceConfig.otpApiPath + this.GET_GENERATE_OTP_ENDPOINT)
            .withBearerToken(true)
            .withUserToken(true)
            .withBody({ request: request })
            .build();
        return this.apiService.fetch(apiRequest).pipe(map(function (success) {
            return success.body.result.response === 'SUCCESS';
        }));
    };
    return GenerateOtpHandler;
}());
export { GenerateOtpHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJhdGUtb3RwLWhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvZmlsZS9oYW5kbGVyL2dlbmVyYXRlLW90cC1oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBZ0MsZUFBZSxFQUFFLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUdsRixPQUFPLEVBQUMsR0FBRyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkM7SUFHSSw0QkFBb0IsVUFBc0IsRUFDdEIsZ0JBQXNDO1FBRHRDLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFzQjtRQUh6Qyw4QkFBeUIsR0FBRyxXQUFXLENBQUM7SUFJekQsQ0FBQztJQUVELG1DQUFNLEdBQU4sVUFBTyxPQUEyQjtRQUM5QixJQUFNLFVBQVUsR0FBWSxJQUFJLE9BQU8sQ0FBQyxPQUFPLEVBQUU7YUFDNUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUM7YUFDOUIsUUFBUSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLHlCQUF5QixDQUFDO2FBQzNFLGVBQWUsQ0FBQyxJQUFJLENBQUM7YUFDckIsYUFBYSxDQUFDLElBQUksQ0FBQzthQUNuQixRQUFRLENBQUMsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUM7YUFDNUIsS0FBSyxFQUFFLENBQUM7UUFFYixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFvQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQzVFLEdBQUcsQ0FBQyxVQUFDLE9BQU87WUFDUixPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsS0FBSyxTQUFTLENBQUM7UUFDdEQsQ0FBQyxDQUFDLENBQ0wsQ0FBQztJQUNOLENBQUM7SUFFTCx5QkFBQztBQUFELENBQUMsQUF2QkQsSUF1QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FwaVJlcXVlc3RIYW5kbGVyLCBBcGlTZXJ2aWNlLCBIdHRwUmVxdWVzdFR5cGUsIFJlcXVlc3R9IGZyb20gJy4uLy4uL2FwaSc7XG5pbXBvcnQge0dlbmVyYXRlT3RwUmVxdWVzdCwgUHJvZmlsZVNlcnZpY2VDb25maWd9IGZyb20gJy4uJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5leHBvcnQgY2xhc3MgR2VuZXJhdGVPdHBIYW5kbGVyIGltcGxlbWVudHMgQXBpUmVxdWVzdEhhbmRsZXI8R2VuZXJhdGVPdHBSZXF1ZXN0LCBib29sZWFuPiB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBHRVRfR0VORVJBVEVfT1RQX0VORFBPSU5UID0gJy9nZW5lcmF0ZSc7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwaVNlcnZpY2U6IEFwaVNlcnZpY2UsXG4gICAgICAgICAgICAgICAgcHJpdmF0ZSBvdHBTZXJ2aWNlQ29uZmlnOiBQcm9maWxlU2VydmljZUNvbmZpZykge1xuICAgIH1cblxuICAgIGhhbmRsZShyZXF1ZXN0OiBHZW5lcmF0ZU90cFJlcXVlc3QpOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcbiAgICAgICAgY29uc3QgYXBpUmVxdWVzdDogUmVxdWVzdCA9IG5ldyBSZXF1ZXN0LkJ1aWxkZXIoKVxuICAgICAgICAgICAgLndpdGhUeXBlKEh0dHBSZXF1ZXN0VHlwZS5QT1NUKVxuICAgICAgICAgICAgLndpdGhQYXRoKHRoaXMub3RwU2VydmljZUNvbmZpZy5vdHBBcGlQYXRoICsgdGhpcy5HRVRfR0VORVJBVEVfT1RQX0VORFBPSU5UKVxuICAgICAgICAgICAgLndpdGhCZWFyZXJUb2tlbih0cnVlKVxuICAgICAgICAgICAgLndpdGhVc2VyVG9rZW4odHJ1ZSlcbiAgICAgICAgICAgIC53aXRoQm9keSh7cmVxdWVzdDogcmVxdWVzdH0pXG4gICAgICAgICAgICAuYnVpbGQoKTtcblxuICAgICAgICByZXR1cm4gdGhpcy5hcGlTZXJ2aWNlLmZldGNoIDx7IHJlc3VsdDogeyByZXNwb25zZTogc3RyaW5nIH0gfT4oYXBpUmVxdWVzdCkucGlwZShcbiAgICAgICAgICAgIG1hcCgoc3VjY2VzcykgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBzdWNjZXNzLmJvZHkucmVzdWx0LnJlc3BvbnNlID09PSAnU1VDQ0VTUyc7XG4gICAgICAgICAgICB9KVxuICAgICAgICApO1xuICAgIH1cblxufVxuIl19