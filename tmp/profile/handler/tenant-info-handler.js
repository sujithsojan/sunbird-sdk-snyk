import { HttpRequestType, Request } from '../../api';
import { map } from 'rxjs/operators';
var TenantInfoHandler = /** @class */ (function () {
    function TenantInfoHandler(apiService, tenantServiceConfig) {
        this.apiService = apiService;
        this.tenantServiceConfig = tenantServiceConfig;
        this.GET_TENANT_INFO_ENDPOINT = '/info';
    }
    TenantInfoHandler.prototype.handle = function (tenantInfoRequest) {
        var apiRequest = new Request.Builder().withType(HttpRequestType.GET)
            .withPath(this.tenantServiceConfig.tenantApiPath + this.GET_TENANT_INFO_ENDPOINT + '/' + tenantInfoRequest.slug)
            .build();
        return this.apiService.fetch(apiRequest).pipe(map(function (success) {
            return success.body.result;
        }));
    };
    return TenantInfoHandler;
}());
export { TenantInfoHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVuYW50LWluZm8taGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm9maWxlL2hhbmRsZXIvdGVuYW50LWluZm8taGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWdDLGVBQWUsRUFBRSxPQUFPLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFLbEYsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRW5DO0lBR0ksMkJBQW9CLFVBQXNCLEVBQ3RCLG1CQUF5QztRQUR6QyxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3RCLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBc0I7UUFINUMsNkJBQXdCLEdBQUcsT0FBTyxDQUFDO0lBSXBELENBQUM7SUFFTSxrQ0FBTSxHQUFiLFVBQWMsaUJBQW9DO1FBQzlDLElBQU0sVUFBVSxHQUFZLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDO2FBQzFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxHQUFHLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDO2FBQy9HLEtBQUssRUFBRSxDQUFDO1FBQ2IsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBMEIsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUNsRSxHQUFHLENBQUMsVUFBQyxPQUFPO1lBQ1IsT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMvQixDQUFDLENBQUMsQ0FDTCxDQUFDO0lBQ04sQ0FBQztJQUNMLHdCQUFDO0FBQUQsQ0FBQyxBQWpCRCxJQWlCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXBpUmVxdWVzdEhhbmRsZXIsIEFwaVNlcnZpY2UsIEh0dHBSZXF1ZXN0VHlwZSwgUmVxdWVzdH0gZnJvbSAnLi4vLi4vYXBpJztcbmltcG9ydCB7VGVuYW50SW5mb30gZnJvbSAnLi4vZGVmL3RlbmFudC1pbmZvJztcbmltcG9ydCB7UHJvZmlsZVNlcnZpY2VDb25maWd9IGZyb20gJy4uJztcbmltcG9ydCB7VGVuYW50SW5mb1JlcXVlc3R9IGZyb20gJy4uJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5leHBvcnQgY2xhc3MgVGVuYW50SW5mb0hhbmRsZXIgaW1wbGVtZW50cyBBcGlSZXF1ZXN0SGFuZGxlcjxUZW5hbnRJbmZvUmVxdWVzdCwgVGVuYW50SW5mbz4ge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgR0VUX1RFTkFOVF9JTkZPX0VORFBPSU5UID0gJy9pbmZvJztcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgYXBpU2VydmljZTogQXBpU2VydmljZSxcbiAgICAgICAgICAgICAgICBwcml2YXRlIHRlbmFudFNlcnZpY2VDb25maWc6IFByb2ZpbGVTZXJ2aWNlQ29uZmlnKSB7XG4gICAgfVxuXG4gICAgcHVibGljIGhhbmRsZSh0ZW5hbnRJbmZvUmVxdWVzdDogVGVuYW50SW5mb1JlcXVlc3QpOiBPYnNlcnZhYmxlPFRlbmFudEluZm8+IHtcbiAgICAgICAgY29uc3QgYXBpUmVxdWVzdDogUmVxdWVzdCA9IG5ldyBSZXF1ZXN0LkJ1aWxkZXIoKS53aXRoVHlwZShIdHRwUmVxdWVzdFR5cGUuR0VUKVxuICAgICAgICAgICAgLndpdGhQYXRoKHRoaXMudGVuYW50U2VydmljZUNvbmZpZy50ZW5hbnRBcGlQYXRoICsgdGhpcy5HRVRfVEVOQU5UX0lORk9fRU5EUE9JTlQgKyAnLycgKyB0ZW5hbnRJbmZvUmVxdWVzdC5zbHVnKVxuICAgICAgICAgICAgLmJ1aWxkKCk7XG4gICAgICAgIHJldHVybiB0aGlzLmFwaVNlcnZpY2UuZmV0Y2ggPHsgcmVzdWx0OiBUZW5hbnRJbmZvIH0+KGFwaVJlcXVlc3QpLnBpcGUoXG4gICAgICAgICAgICBtYXAoKHN1Y2Nlc3MpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3VjY2Vzcy5ib2R5LnJlc3VsdDtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgfVxufVxuIl19