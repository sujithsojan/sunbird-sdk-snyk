import { ApiService } from './api';
import { DbService } from './db';
import { AuthService } from './auth';
import { TelemetryService } from './telemetry';
import { SharedPreferences } from './util/shared-preferences';
import { SdkConfig } from './sdk-config';
import { ContentFeedbackService, ContentService, ContentServiceConfig } from './content';
import { CourseService } from './course';
import { FormService } from './form';
import { FrameworkService, FrameworkUtilService } from './framework';
import { ProfileService } from './profile';
import { KeyValueStore } from './key-value-store';
import { PageAssembleService, PageServiceConfig } from './page';
import { SystemSettingsService } from './system-settings';
import { DeviceInfo } from './util/device';
import { EventsBusService } from './events-bus';
import { SummarizerService } from './summarizer';
import { DownloadService } from './util/download';
import { AppInfo } from './util/app';
import { PlayerService } from './player';
import { TelemetryConfig } from './telemetry/config/telemetry-config';
import { StorageService } from './storage';
import { NotificationService } from './notification';
import { ErrorLoggerService } from './error';
import { NetworkInfoService } from './util/network';
import { SearchHistoryService } from './util/search-history';
import { CodePushExperimentService } from './codepush-experiment';
import { FaqService } from './faq';
import { DeviceRegisterConfig, DeviceRegisterService } from './device-register';
import { ArchiveService } from './archive';
import { NetworkQueue } from './api/network-queue';
import { GroupService } from './group';
import { GroupServiceDeprecated } from './group-deprecated';
import { DiscussionService } from './discussion';
import { SegmentationService } from './segmentation';
import { DebuggingService } from './debugging';
import { NotificationServiceV2 } from './notification-v2/def/notification-service-v2';
import { CertificateService } from './certificate';
export declare class SunbirdSdk {
    private _container;
    private static _instance?;
    static get instance(): SunbirdSdk;
    private _isInitialised;
    get isInitialised(): boolean;
    get sdkConfig(): SdkConfig;
    get appInfo(): AppInfo;
    get pageAssembleService(): PageAssembleService;
    get dbService(): DbService;
    get telemetryService(): TelemetryService;
    get authService(): AuthService;
    get apiService(): ApiService;
    get keyValueStore(): KeyValueStore;
    get profileService(): ProfileService;
    get groupService(): GroupService;
    get groupServiceDeprecated(): GroupServiceDeprecated;
    get contentService(): ContentService;
    get contentFeedbackService(): ContentFeedbackService;
    get courseService(): CourseService;
    get formService(): FormService;
    get frameworkService(): FrameworkService;
    get frameworkUtilService(): FrameworkUtilService;
    get sharedPreferences(): SharedPreferences;
    get systemSettingsService(): SystemSettingsService;
    get eventsBusService(): EventsBusService;
    get summarizerService(): SummarizerService;
    get downloadService(): DownloadService;
    get playerService(): PlayerService;
    get deviceInfo(): DeviceInfo;
    get storageService(): StorageService;
    get notificationService(): NotificationService;
    get errorLoggerService(): ErrorLoggerService;
    get networkInfoService(): NetworkInfoService;
    get searchHistoryService(): SearchHistoryService;
    get codePushExperimentService(): CodePushExperimentService;
    get faqService(): FaqService;
    get deviceRegisterService(): DeviceRegisterService;
    get archiveService(): ArchiveService;
    get networkQueueService(): NetworkQueue;
    get discussionService(): DiscussionService;
    get segmentationService(): SegmentationService;
    get debuggingService(): DebuggingService;
    get notificationServiceV2(): NotificationServiceV2;
    get certificateService(): CertificateService;
    init(sdkConfig: SdkConfig): Promise<void>;
    updateTelemetryConfig(update: Partial<TelemetryConfig>): void;
    updateDeviceRegisterConfig(update: Partial<DeviceRegisterConfig>): void;
    updateContentServiceConfig(update: Partial<ContentServiceConfig>): void;
    updatePageServiceConfig(update: Partial<PageServiceConfig>): void;
    private preInit;
    private postInit;
}
