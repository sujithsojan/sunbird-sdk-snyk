import { LearnerAssessmentsEntry, LearnerSummaryEntry, ProfileEntry } from '../../profile/db/schema';
import { ArrayUtil } from '../../util/array-util';
var SummarizerQueries = /** @class */ (function () {
    function SummarizerQueries() {
    }
    SummarizerQueries.getChildProgressQuery = function (uids) {
        return "SELECT " + LearnerAssessmentsEntry.COLUMN_NAME_UID + ", " + LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + ",\n                COUNT (" + LearnerAssessmentsEntry.COLUMN_NAME_QID + ") AS no_of_questions,\n                SUM (" + LearnerAssessmentsEntry.COLUMN_NAME_CORRECT + ") AS correct_answers,\n                SUM (" + LearnerAssessmentsEntry.COLUMN_NAME_TIME_SPENT + ") AS total_time_spent, h_data ,\n                SUM (" + LearnerAssessmentsEntry.COLUMN_NAME_MAX_SCORE + ") AS total_max_score,\n                SUM (" + LearnerAssessmentsEntry.COLUMN_NAME_SCORE + ") AS total_score\n                FROM  " + LearnerAssessmentsEntry.TABLE_NAME + "\n                WHERE " + LearnerAssessmentsEntry.COLUMN_NAME_UID + " IN (" + ArrayUtil.joinPreservingQuotes(uids) + ")\n                GROUP BY " + LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + " ";
    };
    SummarizerQueries.getDetailReportsQuery = function (uids, contentId) {
        return "SELECT *, lcs." + LearnerSummaryEntry.COLUMN_NAME_TOTAL_TS + "\n                FROM  " + LearnerAssessmentsEntry.TABLE_NAME + " la\n                LEFT JOIN " + LearnerSummaryEntry.TABLE_NAME + " lcs\n                ON (la." + LearnerSummaryEntry.COLUMN_NAME_UID + " = lcs." + LearnerAssessmentsEntry.COLUMN_NAME_UID + ")\n                AND la." + LearnerSummaryEntry.COLUMN_NAME_CONTENT_ID + " = lcs." + LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + "\n                WHERE la." + LearnerAssessmentsEntry.COLUMN_NAME_UID + " IN(" + ArrayUtil.joinPreservingQuotes(uids) + ")\n                AND la." + LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + "='" + contentId + "'";
    };
    SummarizerQueries.getReportsByUserQuery = function (uids, contentId) {
        return "SELECT lcs." + LearnerSummaryEntry.COLUMN_NAME_TOTAL_TS + ",\n                SUM (" + LearnerAssessmentsEntry.COLUMN_NAME_SCORE + ") AS score,\n                la." + LearnerAssessmentsEntry.COLUMN_NAME_HIERARCHY_DATA + ",la." + LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + ",\n                la." + LearnerAssessmentsEntry.COLUMN_NAME_UID + ",p." + ProfileEntry.COLUMN_NAME_HANDLE + ",\n                la." + LearnerAssessmentsEntry.COLUMN_NAME_TIME_SPENT + "\n                FROM " + LearnerAssessmentsEntry.TABLE_NAME + " la\n                LEFT JOIN " + LearnerSummaryEntry.TABLE_NAME + " lcs\n                ON (la." + LearnerSummaryEntry.COLUMN_NAME_UID + " = lcs." + LearnerAssessmentsEntry.COLUMN_NAME_UID + ")\n                LEFT JOIN " + ProfileEntry.TABLE_NAME + " p\n                ON (la." + LearnerAssessmentsEntry.COLUMN_NAME_UID + " = p." + ProfileEntry.COLUMN_NAME_UID + ")\n                WHERE la." + LearnerAssessmentsEntry.COLUMN_NAME_UID + " IN(" + ArrayUtil.joinPreservingQuotes(uids) + ")\n                AND la." + LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + "='" + contentId + "'\n                GROUP BY la." + LearnerAssessmentsEntry.COLUMN_NAME_UID;
    };
    SummarizerQueries.getQuetsionDetailsQuery = function (uids, contentId, qid) {
        return "SELECT " + LearnerAssessmentsEntry.COLUMN_NAME_UID + ", " + LearnerAssessmentsEntry.COLUMN_NAME_TIME_SPENT + " as time,\n                " + LearnerAssessmentsEntry.COLUMN_NAME_SCORE + " as result,\n                " + LearnerAssessmentsEntry.COLUMN_NAME_MAX_SCORE + " as max_score\n                FROM " + LearnerAssessmentsEntry.TABLE_NAME + "\n                WHERE " + LearnerAssessmentsEntry.COLUMN_NAME_UID + " IN(" + ArrayUtil.joinPreservingQuotes(uids) + ")\n                AND " + LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + "='" + contentId + "'\n                AND " + LearnerAssessmentsEntry.COLUMN_NAME_QID + "='" + qid + "'";
    };
    SummarizerQueries.getReportAccuracyQuery = function (uids, contentId) {
        return "SELECT " + LearnerAssessmentsEntry.COLUMN_NAME_QID + ", COUNT (*) as users_count\n                FROM  " + LearnerAssessmentsEntry.TABLE_NAME + "\n                WHERE " + LearnerAssessmentsEntry.COLUMN_NAME_UID + " IN(" + ArrayUtil.joinPreservingQuotes(uids) + ")\n                AND " + LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + "='" + contentId + "'\n                AND " + LearnerAssessmentsEntry.COLUMN_NAME_SCORE + " > 0\n                GROUP BY " + LearnerAssessmentsEntry.COLUMN_NAME_QID;
    };
    SummarizerQueries.getQuestionReportsQuery = function (uids, contentId) {
        return "SELECT *, SUM(" + LearnerAssessmentsEntry.COLUMN_NAME_SCORE + ") as marks,\n                COUNT (" + LearnerAssessmentsEntry.COLUMN_NAME_Q_INDEX + ") as occurence_count,\n                SUM (" + LearnerAssessmentsEntry.COLUMN_NAME_MAX_SCORE + ") as  sum_max_score\n                FROM " + LearnerAssessmentsEntry.TABLE_NAME + "\n                WHERE " + LearnerAssessmentsEntry.COLUMN_NAME_UID + " IN(" + ArrayUtil.joinPreservingQuotes(uids) + ")\n                AND " + LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + "='" + contentId + "'\n                GROUP BY " + LearnerAssessmentsEntry.COLUMN_NAME_QID;
    };
    SummarizerQueries.getFilterForLearnerAssessmentDetails = function (qid, uid, contentId, hierarchyData) {
        var qidFilter = LearnerAssessmentsEntry.COLUMN_NAME_QID + " = '" + qid + "'";
        var uidFilter = LearnerAssessmentsEntry.COLUMN_NAME_UID + " = '" + uid + "'";
        var contentIdFilter = LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + " = '" + contentId + "'";
        var hDataFilter = LearnerAssessmentsEntry.COLUMN_NAME_HIERARCHY_DATA + " = '" + (hierarchyData ? hierarchyData : '') + "'";
        var filter = "WHERE " + uidFilter + " AND " + contentIdFilter + " AND " + hDataFilter + " " + (qid ? " AND " + qidFilter : '');
        return filter;
    };
    SummarizerQueries.getLearnerAssessmentsQuery = function (filter) {
        var query = "SELECT * from " + LearnerAssessmentsEntry.TABLE_NAME + " " + filter + "\n                       ORDER BY " + LearnerAssessmentsEntry.COLUMN_NAME_Q_INDEX;
        return query;
    };
    SummarizerQueries.getUpdateSelection = function () {
        var query = LearnerAssessmentsEntry.COLUMN_NAME_UID + " = ? AND " +
            (LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + " = ? AND ") +
            (LearnerAssessmentsEntry.COLUMN_NAME_HIERARCHY_DATA + " = ? AND ") +
            (LearnerAssessmentsEntry.COLUMN_NAME_QID + " = ? ");
        return query;
    };
    SummarizerQueries.getLearnerSummaryReadSelection = function (hData) {
        var query = LearnerAssessmentsEntry.COLUMN_NAME_UID + " = ? AND " +
            (LearnerAssessmentsEntry.COLUMN_NAME_CONTENT_ID + " = ? AND ") +
            (LearnerAssessmentsEntry.COLUMN_NAME_HIERARCHY_DATA + " = ? ");
        return query;
    };
    return SummarizerQueries;
}());
export { SummarizerQueries };
//# sourceMappingURL=data:application/json;base64,