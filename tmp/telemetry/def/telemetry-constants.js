export var ObjectType;
(function (ObjectType) {
    ObjectType["NOTIFICATION"] = "notification";
    ObjectType["USER"] = "User";
    ObjectType["GROUP"] = "Group";
    ObjectType["CONTENT"] = "Content";
    ObjectType["QUESTION"] = "Question";
})(ObjectType || (ObjectType = {}));
export var Mode;
(function (Mode) {
    Mode["PLAY"] = "play";
})(Mode || (Mode = {}));
export var LogType;
(function (LogType) {
    LogType["NOTIFICATION"] = "notification";
})(LogType || (LogType = {}));
export var LogLevel;
(function (LogLevel) {
    LogLevel["TRACE"] = "TRACE";
    LogLevel["DEBUG"] = "DEBUG";
    LogLevel["INFO"] = "INFO";
    LogLevel["WARN"] = "WARN";
    LogLevel["ERROR"] = "ERROR";
    LogLevel["FATAL"] = "FATAL";
})(LogLevel || (LogLevel = {}));
export var ShareDirection;
(function (ShareDirection) {
    ShareDirection["IN"] = "In";
    ShareDirection["OUT"] = "Out";
})(ShareDirection || (ShareDirection = {}));
export var ShareType;
(function (ShareType) {
    ShareType["FILE"] = "File";
    ShareType["MESSAGE"] = "Message";
    ShareType["LINK"] = "Link";
})(ShareType || (ShareType = {}));
export var ShareItemType;
(function (ShareItemType) {
    ShareItemType["CONTENT"] = "CONTENT";
    ShareItemType["EXPLODEDCONTENT"] = "EXPLODEDCONTENT";
    ShareItemType["TELEMETRY"] = "TELEMETRY";
    ShareItemType["PROFILE"] = "PROFILE";
})(ShareItemType || (ShareItemType = {}));
var LogMessage = /** @class */ (function () {
    function LogMessage() {
        this.RECEIVED = 'Received';
        this.DISPLAYED = 'Displayed';
    }
    return LogMessage;
}());
export { LogMessage };
export var InteractType;
(function (InteractType) {
    InteractType["TOUCH"] = "TOUCH";
    InteractType["OTHER"] = "OTHER";
})(InteractType || (InteractType = {}));
export var InteractSubType;
(function (InteractSubType) {
    InteractSubType["NETWORK_SPEED"] = "network-speed";
    InteractSubType["SUBTYPE_SPINE"] = "spine";
    InteractSubType["ONLINE"] = "online";
    InteractSubType["FULL"] = "full";
    InteractSubType["CONTENT_VARIANT"] = "content-variant-download";
    InteractSubType["DEVICE_TIME_OFFSET_FOUND"] = "device-time-offset-found";
    InteractSubType["CONTENT_DOWNLOAD_INITIATE"] = "ContentDownload-Initiate";
    InteractSubType["CONTENT_DOWNLOAD_SUCCESS"] = "ContentDownload-Success";
    InteractSubType["CONTENT_DOWNLOAD_CANCEL"] = "ContentDownload-Cancel";
})(InteractSubType || (InteractSubType = {}));
export var TelemetryErrorCode;
(function (TelemetryErrorCode) {
    TelemetryErrorCode["ERR_DOWNLOAD_FAILED"] = "ERR_DOWNLOAD_FAILED";
})(TelemetryErrorCode || (TelemetryErrorCode = {}));
export var ErrorType;
(function (ErrorType) {
    ErrorType["SYSTEM"] = "SYSTEM";
})(ErrorType || (ErrorType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVsZW1ldHJ5LWNvbnN0YW50cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZWxlbWV0cnkvZGVmL3RlbGVtZXRyeS1jb25zdGFudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsTUFBTSxDQUFOLElBQVksVUFNWDtBQU5ELFdBQVksVUFBVTtJQUNsQiwyQ0FBNkIsQ0FBQTtJQUM3QiwyQkFBYSxDQUFBO0lBQ2IsNkJBQWUsQ0FBQTtJQUNmLGlDQUFtQixDQUFBO0lBQ25CLG1DQUFxQixDQUFBO0FBQ3pCLENBQUMsRUFOVyxVQUFVLEtBQVYsVUFBVSxRQU1yQjtBQUVELE1BQU0sQ0FBTixJQUFZLElBRVg7QUFGRCxXQUFZLElBQUk7SUFDWixxQkFBYSxDQUFBO0FBQ2pCLENBQUMsRUFGVyxJQUFJLEtBQUosSUFBSSxRQUVmO0FBSUQsTUFBTSxDQUFOLElBQVksT0FFWDtBQUZELFdBQVksT0FBTztJQUNmLHdDQUE2QixDQUFBO0FBQ2pDLENBQUMsRUFGVyxPQUFPLEtBQVAsT0FBTyxRQUVsQjtBQUVELE1BQU0sQ0FBTixJQUFZLFFBT1g7QUFQRCxXQUFZLFFBQVE7SUFDaEIsMkJBQWUsQ0FBQTtJQUNmLDJCQUFlLENBQUE7SUFDZix5QkFBYSxDQUFBO0lBQ2IseUJBQWEsQ0FBQTtJQUNiLDJCQUFlLENBQUE7SUFDZiwyQkFBZSxDQUFBO0FBQ25CLENBQUMsRUFQVyxRQUFRLEtBQVIsUUFBUSxRQU9uQjtBQUVELE1BQU0sQ0FBTixJQUFZLGNBR1g7QUFIRCxXQUFZLGNBQWM7SUFDdEIsMkJBQVMsQ0FBQTtJQUNULDZCQUFXLENBQUE7QUFDZixDQUFDLEVBSFcsY0FBYyxLQUFkLGNBQWMsUUFHekI7QUFFRCxNQUFNLENBQU4sSUFBWSxTQUlYO0FBSkQsV0FBWSxTQUFTO0lBQ2pCLDBCQUFhLENBQUE7SUFDYixnQ0FBbUIsQ0FBQTtJQUNuQiwwQkFBYSxDQUFBO0FBQ2pCLENBQUMsRUFKVyxTQUFTLEtBQVQsU0FBUyxRQUlwQjtBQUVELE1BQU0sQ0FBTixJQUFZLGFBS1g7QUFMRCxXQUFZLGFBQWE7SUFDckIsb0NBQW1CLENBQUE7SUFDbkIsb0RBQW1DLENBQUE7SUFDbkMsd0NBQXVCLENBQUE7SUFDdkIsb0NBQW1CLENBQUE7QUFDdkIsQ0FBQyxFQUxXLGFBQWEsS0FBYixhQUFhLFFBS3hCO0FBRUQ7SUFBQTtRQUNJLGFBQVEsR0FBRyxVQUFVLENBQUM7UUFDdEIsY0FBUyxHQUFHLFdBQVcsQ0FBQztJQUM1QixDQUFDO0lBQUQsaUJBQUM7QUFBRCxDQUFDLEFBSEQsSUFHQzs7QUFHRCxNQUFNLENBQU4sSUFBWSxZQUdYO0FBSEQsV0FBWSxZQUFZO0lBQ3BCLCtCQUFlLENBQUE7SUFDZiwrQkFBZSxDQUFBO0FBQ25CLENBQUMsRUFIVyxZQUFZLEtBQVosWUFBWSxRQUd2QjtBQUVELE1BQU0sQ0FBTixJQUFZLGVBVVg7QUFWRCxXQUFZLGVBQWU7SUFDdkIsa0RBQStCLENBQUE7SUFDL0IsMENBQXVCLENBQUE7SUFDdkIsb0NBQWlCLENBQUE7SUFDakIsZ0NBQWEsQ0FBQTtJQUNiLCtEQUE0QyxDQUFBO0lBQzVDLHdFQUFxRCxDQUFBO0lBQ3JELHlFQUFzRCxDQUFBO0lBQ3RELHVFQUFvRCxDQUFBO0lBQ3BELHFFQUFrRCxDQUFBO0FBQ3RELENBQUMsRUFWVyxlQUFlLEtBQWYsZUFBZSxRQVUxQjtBQUdELE1BQU0sQ0FBTixJQUFZLGtCQUVYO0FBRkQsV0FBWSxrQkFBa0I7SUFDMUIsaUVBQTJDLENBQUE7QUFDL0MsQ0FBQyxFQUZXLGtCQUFrQixLQUFsQixrQkFBa0IsUUFFN0I7QUFFRCxNQUFNLENBQU4sSUFBWSxTQUVYO0FBRkQsV0FBWSxTQUFTO0lBQ2pCLDhCQUFpQixDQUFBO0FBQ3JCLENBQUMsRUFGVyxTQUFTLEtBQVQsU0FBUyxRQUVwQiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIFdvcmtmbG93cyA9IHN0cmluZztcblxuZXhwb3J0IHR5cGUgRW52aXJvbm1lbnQgPSBzdHJpbmc7XG5cbmV4cG9ydCBlbnVtIE9iamVjdFR5cGUge1xuICAgIE5PVElGSUNBVElPTiA9ICdub3RpZmljYXRpb24nLFxuICAgIFVTRVIgPSAnVXNlcicsXG4gICAgR1JPVVAgPSAnR3JvdXAnLFxuICAgIENPTlRFTlQgPSAnQ29udGVudCcsXG4gICAgUVVFU1RJT04gPSAnUXVlc3Rpb24nXG59XG5cbmV4cG9ydCBlbnVtIE1vZGUge1xuICAgIFBMQVkgPSAncGxheSdcbn1cblxuZXhwb3J0IHR5cGUgUGFnZUlkID0gc3RyaW5nO1xuXG5leHBvcnQgZW51bSBMb2dUeXBlIHtcbiAgICBOT1RJRklDQVRJT04gPSAnbm90aWZpY2F0aW9uJ1xufVxuXG5leHBvcnQgZW51bSBMb2dMZXZlbCB7XG4gICAgVFJBQ0UgPSAnVFJBQ0UnLFxuICAgIERFQlVHID0gJ0RFQlVHJyxcbiAgICBJTkZPID0gJ0lORk8nLFxuICAgIFdBUk4gPSAnV0FSTicsXG4gICAgRVJST1IgPSAnRVJST1InLFxuICAgIEZBVEFMID0gJ0ZBVEFMJ1xufVxuXG5leHBvcnQgZW51bSBTaGFyZURpcmVjdGlvbiB7XG4gICAgSU4gPSAnSW4nLFxuICAgIE9VVCA9ICdPdXQnLFxufVxuXG5leHBvcnQgZW51bSBTaGFyZVR5cGUge1xuICAgIEZJTEUgPSAnRmlsZScsXG4gICAgTUVTU0FHRSA9ICdNZXNzYWdlJyxcbiAgICBMSU5LID0gJ0xpbmsnXG59XG5cbmV4cG9ydCBlbnVtIFNoYXJlSXRlbVR5cGUge1xuICAgIENPTlRFTlQgPSAnQ09OVEVOVCcsXG4gICAgRVhQTE9ERURDT05URU5UID0gJ0VYUExPREVEQ09OVEVOVCcsXG4gICAgVEVMRU1FVFJZID0gJ1RFTEVNRVRSWScsXG4gICAgUFJPRklMRSA9ICdQUk9GSUxFJ1xufVxuXG5leHBvcnQgY2xhc3MgTG9nTWVzc2FnZSB7XG4gICAgUkVDRUlWRUQgPSAnUmVjZWl2ZWQnO1xuICAgIERJU1BMQVlFRCA9ICdEaXNwbGF5ZWQnO1xufVxuXG5cbmV4cG9ydCBlbnVtIEludGVyYWN0VHlwZSB7XG4gICAgVE9VQ0ggPSAnVE9VQ0gnLFxuICAgIE9USEVSID0gJ09USEVSJ1xufVxuXG5leHBvcnQgZW51bSBJbnRlcmFjdFN1YlR5cGUge1xuICAgIE5FVFdPUktfU1BFRUQgPSAnbmV0d29yay1zcGVlZCcsXG4gICAgU1VCVFlQRV9TUElORSA9ICdzcGluZScsXG4gICAgT05MSU5FID0gJ29ubGluZScsXG4gICAgRlVMTCA9ICdmdWxsJyxcbiAgICBDT05URU5UX1ZBUklBTlQgPSAnY29udGVudC12YXJpYW50LWRvd25sb2FkJyxcbiAgICBERVZJQ0VfVElNRV9PRkZTRVRfRk9VTkQgPSAnZGV2aWNlLXRpbWUtb2Zmc2V0LWZvdW5kJyxcbiAgICBDT05URU5UX0RPV05MT0FEX0lOSVRJQVRFID0gJ0NvbnRlbnREb3dubG9hZC1Jbml0aWF0ZScsXG4gICAgQ09OVEVOVF9ET1dOTE9BRF9TVUNDRVNTID0gJ0NvbnRlbnREb3dubG9hZC1TdWNjZXNzJyxcbiAgICBDT05URU5UX0RPV05MT0FEX0NBTkNFTCA9ICdDb250ZW50RG93bmxvYWQtQ2FuY2VsJyxcbn1cblxuXG5leHBvcnQgZW51bSBUZWxlbWV0cnlFcnJvckNvZGUge1xuICAgIEVSUl9ET1dOTE9BRF9GQUlMRUQgPSAnRVJSX0RPV05MT0FEX0ZBSUxFRCdcbn1cblxuZXhwb3J0IGVudW0gRXJyb3JUeXBlIHtcbiAgICBTWVNURU0gPSAnU1lTVEVNJ1xufVxuXG4iXX0=