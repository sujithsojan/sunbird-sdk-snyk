var ObjectUtil = /** @class */ (function () {
    function ObjectUtil() {
    }
    ObjectUtil.equals = function (a, b) {
        var countProps = function (obj) {
            var count = 0;
            for (var k in obj) {
                if (obj.hasOwnProperty(k)) {
                    count++;
                }
            }
            return count;
        };
        var objectEquals = function (v1, v2) {
            if (typeof (v1) !== typeof (v2)) {
                return false;
            }
            if (typeof (v1) === 'function') {
                return v1.toString() === v2.toString();
            }
            if (v1 instanceof Object && v2 instanceof Object) {
                if (countProps(v1) !== countProps(v2)) {
                    return false;
                }
                var r = true;
                for (var k in v1) {
                    r = objectEquals(v1[k], v2[k]);
                    if (!r) {
                        return false;
                    }
                }
                return true;
            }
            else {
                return v1 === v2;
            }
        };
        return objectEquals(a, b);
    };
    ObjectUtil.getPropDiff = function (newObj, oldObj) {
        return Object.keys(newObj).reduce(function (acc, key) {
            if (ObjectUtil.equals(newObj[key], oldObj[key])) {
                return acc;
            }
            acc.push(key);
            return acc;
        }, []);
    };
    ObjectUtil.getTruthyProps = function (obj) {
        return Object.keys(obj).filter(function (key) { return !!obj[key]; });
    };
    ObjectUtil.toOrderedString = function (obj) {
        return JSON.stringify(Object.keys(obj).sort().reduce(function (acc, k) { acc[k] = obj[k]; return acc; }, {}));
    };
    ObjectUtil.withDeeplyOrderedKeys = function (obj) {
        return Object.keys(obj).sort().reduce(function (acc, k) {
            if (typeof obj[k] === 'object' && !Array.isArray(obj[k])) {
                acc[k] = ObjectUtil.withDeeplyOrderedKeys(obj[k]);
            }
            else {
                acc[k] = obj[k];
            }
            return acc;
        }, {});
    };
    return ObjectUtil;
}());
export { ObjectUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2JqZWN0LXV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9vYmplY3QtdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUFBO0lBMEVBLENBQUM7SUF6RWlCLGlCQUFNLEdBQXBCLFVBQXFCLENBQU0sRUFBRSxDQUFNO1FBQy9CLElBQU0sVUFBVSxHQUFHLFVBQUMsR0FBRztZQUNuQixJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7WUFDZCxLQUFLLElBQU0sQ0FBQyxJQUFJLEdBQUcsRUFBRTtnQkFDakIsSUFBSSxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxFQUFFO29CQUN2QixLQUFLLEVBQUUsQ0FBQztpQkFDWDthQUNKO1lBQ0QsT0FBTyxLQUFLLENBQUM7UUFDakIsQ0FBQyxDQUFDO1FBRUYsSUFBTSxZQUFZLEdBQUcsVUFBQyxFQUFPLEVBQUUsRUFBTztZQUNsQyxJQUFJLE9BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxPQUFNLENBQUMsRUFBRSxDQUFDLEVBQUU7Z0JBQzNCLE9BQU8sS0FBSyxDQUFDO2FBQ2hCO1lBRUQsSUFBSSxPQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssVUFBVSxFQUFFO2dCQUMzQixPQUFPLEVBQUUsQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7YUFDMUM7WUFFRCxJQUFJLEVBQUUsWUFBWSxNQUFNLElBQUksRUFBRSxZQUFZLE1BQU0sRUFBRTtnQkFDOUMsSUFBSSxVQUFVLENBQUMsRUFBRSxDQUFDLEtBQUssVUFBVSxDQUFDLEVBQUUsQ0FBQyxFQUFFO29CQUNuQyxPQUFPLEtBQUssQ0FBQztpQkFDaEI7Z0JBRUQsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDO2dCQUViLEtBQUssSUFBTSxDQUFDLElBQUksRUFBRSxFQUFFO29CQUNoQixDQUFDLEdBQUcsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDL0IsSUFBSSxDQUFDLENBQUMsRUFBRTt3QkFDSixPQUFPLEtBQUssQ0FBQztxQkFDaEI7aUJBQ0o7Z0JBQ0QsT0FBTyxJQUFJLENBQUM7YUFDZjtpQkFBTTtnQkFDSCxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7YUFDcEI7UUFDTCxDQUFDLENBQUM7UUFFRixPQUFPLFlBQVksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVhLHNCQUFXLEdBQXpCLFVBQTBCLE1BQVUsRUFBRSxNQUFVO1FBQzVDLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQVcsVUFBQyxHQUFhLEVBQUUsR0FBRztZQUMzRCxJQUFJLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFO2dCQUM3QyxPQUFPLEdBQUcsQ0FBQzthQUNkO1lBRUQsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNkLE9BQU8sR0FBRyxDQUFDO1FBQ2YsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVhLHlCQUFjLEdBQTVCLFVBQTZCLEdBQU87UUFDaEMsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFDLEdBQUcsSUFBSyxPQUFBLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQVYsQ0FBVSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVhLDBCQUFlLEdBQTdCLFVBQThCLEdBQU87UUFDakMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFLLFVBQUMsR0FBRyxFQUFFLENBQUMsSUFBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNoSCxDQUFDO0lBRWEsZ0NBQXFCLEdBQW5DLFVBQW9DLEdBQU87UUFDdkMsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLE1BQU0sQ0FBSyxVQUFDLEdBQUcsRUFBRSxDQUFDO1lBQzdDLElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssUUFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDdEQsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNyRDtpQkFBTTtnQkFDSCxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ25CO1lBRUQsT0FBTyxHQUFHLENBQUM7UUFDZixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDWCxDQUFDO0lBRUwsaUJBQUM7QUFBRCxDQUFDLEFBMUVELElBMEVDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIE9iamVjdFV0aWwge1xuICAgIHB1YmxpYyBzdGF0aWMgZXF1YWxzKGE6IGFueSwgYjogYW55KTogYm9vbGVhbiB7XG4gICAgICAgIGNvbnN0IGNvdW50UHJvcHMgPSAob2JqKSA9PiB7XG4gICAgICAgICAgICBsZXQgY291bnQgPSAwO1xuICAgICAgICAgICAgZm9yIChjb25zdCBrIGluIG9iaikge1xuICAgICAgICAgICAgICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkoaykpIHtcbiAgICAgICAgICAgICAgICAgICAgY291bnQrKztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY291bnQ7XG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3Qgb2JqZWN0RXF1YWxzID0gKHYxOiBhbnksIHYyOiBhbnkpID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YodjEpICE9PSB0eXBlb2YodjIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodHlwZW9mKHYxKSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHJldHVybiB2MS50b1N0cmluZygpID09PSB2Mi50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodjEgaW5zdGFuY2VvZiBPYmplY3QgJiYgdjIgaW5zdGFuY2VvZiBPYmplY3QpIHtcbiAgICAgICAgICAgICAgICBpZiAoY291bnRQcm9wcyh2MSkgIT09IGNvdW50UHJvcHModjIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBsZXQgciA9IHRydWU7XG5cbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGsgaW4gdjEpIHtcbiAgICAgICAgICAgICAgICAgICAgciA9IG9iamVjdEVxdWFscyh2MVtrXSwgdjJba10pO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHYxID09PSB2MjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gb2JqZWN0RXF1YWxzKGEsIGIpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0UHJvcERpZmYobmV3T2JqOiB7fSwgb2xkT2JqOiB7fSk6IHN0cmluZ1tdIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKG5ld09iaikucmVkdWNlPHN0cmluZ1tdPigoYWNjOiBzdHJpbmdbXSwga2V5KSA9PiB7XG4gICAgICAgICAgICBpZiAoT2JqZWN0VXRpbC5lcXVhbHMobmV3T2JqW2tleV0sIG9sZE9ialtrZXldKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFjYy5wdXNoKGtleSk7XG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9LCBbXSk7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBnZXRUcnV0aHlQcm9wcyhvYmo6IHt9KTogc3RyaW5nW10ge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMob2JqKS5maWx0ZXIoKGtleSkgPT4gISFvYmpba2V5XSk7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyB0b09yZGVyZWRTdHJpbmcob2JqOiB7fSk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShPYmplY3Qua2V5cyhvYmopLnNvcnQoKS5yZWR1Y2U8e30+KChhY2MsIGspID0+IHsgYWNjW2tdID0gb2JqW2tdOyByZXR1cm4gYWNjOyB9LCB7fSkpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgd2l0aERlZXBseU9yZGVyZWRLZXlzKG9iajoge30pOiB7fSB7XG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhvYmopLnNvcnQoKS5yZWR1Y2U8e30+KChhY2MsIGspID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb2JqW2tdID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShvYmpba10pKSB7XG4gICAgICAgICAgICAgICAgYWNjW2tdID0gT2JqZWN0VXRpbC53aXRoRGVlcGx5T3JkZXJlZEtleXMob2JqW2tdKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYWNjW2tdID0gb2JqW2tdO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9LCB7fSk7XG4gICAgfVxuXG59XG4iXX0=